I 2018-01-25 12:59:43:121 server.cc(86) Starting WebDriver server on port: '18002' on host: ''
T 2018-01-25 12:59:43:121 server.cc(634) Entering Server::PopulateCommandRepository
T 2018-01-25 12:59:43:121 IEServer.cpp(32) Entering IEServer::IEServer
I 2018-01-25 12:59:43:121 IEServer.cpp(33) Driver version: 3.6.0.0 (32-bit)
T 2018-01-25 12:59:43:121 server.cc(121) Entering Server::Start
D 2018-01-25 12:59:43:121 server.cc(148) Civetweb ACL is -0.0.0.0/0,+127.0.0.1
T 2018-01-25 12:59:43:339 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:43:339 server.cc(183) Process request with: URI: /status HTTP verb: GET
body: {}
T 2018-01-25 12:59:43:340 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 12:59:43:340 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 12:59:43:340 server.cc(281) Command: GET /status {}
T 2018-01-25 12:59:43:340 IEServer.cpp(51) Entering IEServer::GetStatus
T 2018-01-25 12:59:43:341 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 12:59:43:341 response.cc(78) Entering Response::SetResponse
T 2018-01-25 12:59:43:341 response.cc(51) Entering Response::Serialize
D 2018-01-25 12:59:43:341 server.cc(338) Response: {"value":{"build":{"version":"3.6.0.0 (32-bit)"},"message":"Ready to create session","os":{"arch":"x64","name":"windows","version":"10.0.16299.15 (WinBuild.160101.0800)"},"ready":true}}

T 2018-01-25 12:59:43:341 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 12:59:43:341 response.cc(30) Entering Response::Deserialize
T 2018-01-25 12:59:43:341 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 12:59:43:498 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:43:498 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 12:59:43:498 server.cc(183) Process request with: URI: /session HTTP verb: POST
body: {
  "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
  "capabilities": {
    "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
    "firstMatch": [
      {"browserName":"internet explorer","platformName":"windows","se:ieOptions":{"ie.usePerProcessProxy":"true"}}
    ]
  }
}
T 2018-01-25 12:59:43:498 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 12:59:43:498 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 12:59:43:498 server.cc(281) Command: POST /session {
  "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
  "capabilities": {
    "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
    "firstMatch": [
      {"browserName":"internet explorer","platformName":"windows","se:ieOptions":{"ie.usePerProcessProxy":"true"}}
    ]
  }
}
T 2018-01-25 12:59:43:498 IEServer.cpp(42) Entering IEServer::InitializeSession
T 2018-01-25 12:59:43:498 IESession.cpp(38) Entering IESession::Initialize
D 2018-01-25 12:59:43:498 IESession.cpp(53) Mutex acquired for session initalization
T 2018-01-25 12:59:43:498 IECommandExecutor.cpp(386) Entering IECommandExecutor::ThreadProc
T 2018-01-25 12:59:43:500 IECommandExecutor.cpp(47) Entering IECommandExecutor::OnCreate
T 2018-01-25 12:59:43:500 IECommandExecutor.cpp(753) Entering IECommandExecutor::PopulateElementFinderMethods
T 2018-01-25 12:59:43:500 InputManager.cpp(40) Entering InputManager::InputManager
T 2018-01-25 12:59:43:500 InputManager.cpp(75) Entering InputManager::Initialize
T 2018-01-25 12:59:43:500 BrowserFactory.cpp(998) Entering BrowserFactory::GetExecutableLocation
T 2018-01-25 12:59:43:500 BrowserFactory.cpp(1039) Entering BrowserFactory::GetIEVersion
T 2018-01-25 12:59:43:500 CommandHandlerRepository.cpp(108) Entering CommandHandlerRepository::PopulateCommandHandlers
T 2018-01-25 12:59:43:501 IESession.cpp(99) Created thread for command executor returns HWND: '000C1A9A'
T 2018-01-25 12:59:43:501 IESession.cpp(103) Session id is retrived from command executor window: '080bf16d-3441-4fbe-b8b8-d561e0d430fe'
D 2018-01-25 12:59:43:501 IESession.cpp(109) Releasing session initialization mutex
T 2018-01-25 12:59:43:501 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 12:59:43:501 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 12:59:43:501 command.cc(31) Entering Command::Deserialize
D 2018-01-25 12:59:43:501 command.cc(36) Raw JSON command: { "name" : "newSession", "locator" : { }, "parameters" : {
  "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
  "capabilities": {
    "desiredCapabilities": {"browserName":"internet explorer","ensureCleanSession":true,"ie.usePerProcessProxy":"true","platform":"WINDOWS","se:ieOptions":{"ie.usePerProcessProxy":"true"}},
    "firstMatch": [
      {"browserName":"internet explorer","platformName":"windows","se:ieOptions":{"ie.usePerProcessProxy":"true"}}
    ]
  }
} }
T 2018-01-25 12:59:43:501 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 12:59:43:501 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 12:59:43:501 IESession.cpp(212) Beginning wait for response length to be not zero
D 2018-01-25 12:59:43:501 CommandHandlers\NewSessionCommandHandler.cpp(46) Found W3C capabilities structure
D 2018-01-25 12:59:43:501 CommandHandlers\NewSessionCommandHandler.cpp(505) Validating capabilities object
D 2018-01-25 12:59:43:501 CommandHandlers\NewSessionCommandHandler.cpp(505) Validating capabilities object
D 2018-01-25 12:59:43:501 CommandHandlers\NewSessionCommandHandler.cpp(535) Found browserNamecapability. Validating value type is string.
D 2018-01-25 12:59:43:501 CommandHandlers\NewSessionCommandHandler.cpp(564) Found platformNamecapability. Validating value type is string.
D 2018-01-25 12:59:43:501 CommandHandlers\NewSessionCommandHandler.cpp(794) Found proxycapability. Validating value type is object.
T 2018-01-25 12:59:43:501 BrowserFactory.cpp(113) Entering BrowserFactory::Initialize
T 2018-01-25 12:59:43:501 IECommandExecutor.cpp(631) Entering IECommandExecutor::CreateNewBrowser
T 2018-01-25 12:59:43:501 BrowserFactory.cpp(142) Entering BrowserFactory::LaunchBrowserProcess
D 2018-01-25 12:59:43:501 BrowserFactory.cpp(146) Ignoring Protected Mode Settings: 0
D 2018-01-25 12:59:43:501 BrowserFactory.cpp(149) Checking validity of Protected Mode settings.
T 2018-01-25 12:59:43:501 BrowserFactory.cpp(1058) Entering BrowserFactory::ProtectedModeSettingsAreValid
D 2018-01-25 12:59:43:501 BrowserFactory.cpp(1061) Detected IE version: 11, Windows version supports Protected Mode: 1
T 2018-01-25 12:59:43:501 BrowserFactory.cpp(1135) Entering BrowserFactory::GetZoneProtectedModeSetting
D 2018-01-25 12:59:43:501 BrowserFactory.cpp(1152) Found Protected Mode setting value of 3 for zone 1
T 2018-01-25 12:59:43:501 BrowserFactory.cpp(1135) Entering BrowserFactory::GetZoneProtectedModeSetting
D 2018-01-25 12:59:43:501 BrowserFactory.cpp(1156) RegQueryValueEx failed for getting Protected Mode setting for a zone: 2
T 2018-01-25 12:59:43:501 BrowserFactory.cpp(1135) Entering BrowserFactory::GetZoneProtectedModeSetting
D 2018-01-25 12:59:43:501 BrowserFactory.cpp(1156) RegQueryValueEx failed for getting Protected Mode setting for a zone: 3
T 2018-01-25 12:59:43:501 BrowserFactory.cpp(1135) Entering BrowserFactory::GetZoneProtectedModeSetting
D 2018-01-25 12:59:43:501 BrowserFactory.cpp(1156) RegQueryValueEx failed for getting Protected Mode setting for a zone: 4
D 2018-01-25 12:59:43:501 BrowserFactory.cpp(152) Has Valid Protected Mode Settings: 1
T 2018-01-25 12:59:43:501 BrowserFactory.cpp(226) Entering BrowserFactory::IsIELaunchURLAvailable
T 2018-01-25 12:59:43:504 BrowserFactory.cpp(130) Entering BrowserFactory::ClearCache
T 2018-01-25 12:59:43:504 BrowserFactory.cpp(247) Entering BrowserFactory::LaunchBrowserUsingIELaunchURL
D 2018-01-25 12:59:43:504 BrowserFactory.cpp(248) Starting IE using the IELaunchURL API
D 2018-01-25 12:59:43:865 BrowserFactory.cpp(202) IE launched successfully with process ID 14780
D 2018-01-25 12:59:43:865 BrowserFactory.cpp(208) Process with ID 14780 is executing iexplore.exe
T 2018-01-25 12:59:43:865 BrowserFactory.cpp(365) Entering BrowserFactory::AttachToBrowser
D 2018-01-25 12:59:43:865 BrowserFactory.cpp(375) Using Active Accessibility to find IWebBrowser2 interface
T 2018-01-25 12:59:43:865 BrowserFactory.cpp(414) Entering BrowserFactory::AttachToBrowserUsingActiveAccessibility
T 2018-01-25 12:59:43:939 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:43:939 server.cc(183) Process request with: URI: / HTTP verb: GET
body: {}
T 2018-01-25 12:59:43:939 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 12:59:44:156 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:44:156 server.cc(183) Process request with: URI: /favicon.ico HTTP verb: GET
body: {}
T 2018-01-25 12:59:44:156 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 12:59:44:156 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 12:59:44:156 server.cc(281) Command: GET /favicon.ico {}
D 2018-01-25 12:59:44:156 server.cc(338) Response: { "error" : "unknown method", "message" : "Command not found: GET /favicon.ico" }
T 2018-01-25 12:59:44:156 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 12:59:44:156 response.cc(30) Entering Response::Deserialize
T 2018-01-25 12:59:44:156 server.cc(445) Entering Server::SendHttpOk
D 2018-01-25 12:59:44:367 BrowserFactory.cpp(434) Found window handle 0003196E for window with class 'Internet Explorer_Server' belonging to process with id 14780
T 2018-01-25 12:59:44:368 BrowserFactory.cpp(329) Entering BrowserFactory::GetDocumentFromWindowHandle
D 2018-01-25 12:59:44:443 BrowserFactory.cpp(396) Ignoring zoom setting: 0
T 2018-01-25 12:59:44:443 BrowserFactory.cpp(574) Entering BrowserFactory::GetBrowserZoomLevel
T 2018-01-25 12:59:44:455 BrowserFactory.cpp(614) Entering BrowserFactory::GetZoomLevel
D 2018-01-25 12:59:44:469 BrowserFactory.cpp(694) Browser zoom level is 100%
I 2018-01-25 12:59:44:472 IECommandExecutor.cpp(654) Persistent hovering set to: 1
T 2018-01-25 12:59:44:473 ProxyManager.cpp(97) ProxyManager::SetProxySettings
D 2018-01-25 12:59:44:473 ProxyManager.cpp(113) Using existing system proxy settings.
T 2018-01-25 12:59:44:473 DocumentHost.cpp(33) Entering DocumentHost::DocumentHost
T 2018-01-25 12:59:44:473 CookieManager.cpp(49) Entering CookieManager::Initialize
T 2018-01-25 12:59:44:473 Browser.cpp(33) Entering Browser::Browser
T 2018-01-25 12:59:44:473 Browser.cpp(293) Entering Browser::AttachEvents
T 2018-01-25 12:59:44:475 IECommandExecutor.cpp(621) Entering IECommandExecutor::AddManagedBrowser
T 2018-01-25 12:59:44:475 IECommandExecutor.cpp(625) Setting current browser id to eae085c8-5e5f-4cc6-8dc2-ebd0a9a8671c
T 2018-01-25 12:59:44:476 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 12:59:44:476 response.cc(78) Entering Response::SetResponse
T 2018-01-25 12:59:44:476 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:476 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:476 response.cc(51) Entering Response::Serialize
T 2018-01-25 12:59:44:477 IESession.cpp(221) Found non-zero response length
T 2018-01-25 12:59:44:477 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 12:59:44:477 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
T 2018-01-25 12:59:44:477 response.cc(30) Entering Response::Deserialize
D 2018-01-25 12:59:44:477 server.cc(338) Response: {"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"internet explorer","browserVersion":"11","pageLoadStrategy":"normal","platformName":"windows","se:ieOptions":{"browserAttachTimeout":0,"elementScrollBehavior":0,"enablePersistentHover":true,"ie.browserCommandLineSwitches":"","ie.ensureCleanSession":false,"ie.fileUploadDialogTimeout":3000,"ie.forceCreateProcessApi":false,"ignoreProtectedModeSettings":false,"ignoreZoomSetting":false,"initialBrowserUrl":"http://localhost:18002/","nativeEvents":true,"requireWindowFocus":false},"setWindowRect":true},"sessionId":"080bf16d-3441-4fbe-b8b8-d561e0d430fe"}}

T 2018-01-25 12:59:44:477 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 12:59:44:477 response.cc(30) Entering Response::Deserialize
T 2018-01-25 12:59:44:477 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 12:59:44:533 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:44:533 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 12:59:44:533 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/timeouts HTTP verb: POST
body: {"implicit":0}
T 2018-01-25 12:59:44:533 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 12:59:44:533 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 12:59:44:533 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/timeouts {"implicit":0}
T 2018-01-25 12:59:44:533 server.cc(378) Entering Server::LookupSession
T 2018-01-25 12:59:44:533 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 12:59:44:533 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 12:59:44:533 command.cc(31) Entering Command::Deserialize
D 2018-01-25 12:59:44:533 command.cc(36) Raw JSON command: { "name" : "setTimeouts", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"implicit":0} }
T 2018-01-25 12:59:44:533 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 12:59:44:533 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 12:59:44:533 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:533 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:533 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 12:59:44:533 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 12:59:44:533 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:44:533 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:44:533 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 12:59:44:533 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:533 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:533 response.cc(51) Entering Response::Serialize
T 2018-01-25 12:59:44:544 IESession.cpp(221) Found non-zero response length
T 2018-01-25 12:59:44:544 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 12:59:44:544 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 12:59:44:544 server.cc(338) Response: {"value":null}

T 2018-01-25 12:59:44:544 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 12:59:44:544 response.cc(30) Entering Response::Deserialize
T 2018-01-25 12:59:44:544 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 12:59:44:551 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:44:551 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 12:59:44:551 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/execute/sync HTTP verb: POST
body: {"script":"return navigator.sayswho\u003d (function() { var ua\u003d navigator.userAgent, tem, M\u003d ua.match(/(opera|chrome|safari|firefox|msie|trident)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i) || []; if (/trident/i.test(M[1])) {     tem\u003d  /\\brv[ :]+(\\d+)/g.exec(ua) || [];     return \u0027IE \u0027+(tem[1] || \u0027\u0027); } if(M[1]\u003d\u003d\u003d \u0027Chrome\u0027) {     tem\u003d ua.match(/\b(OPR|Edge)\\/(\\d+)/);     if(tem!\u003d null) return tem.slice(1).join(\u0027 \u0027).replace(\u0027OPR\u0027, \u0027Opera\u0027); } M\u003d M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, \u0027-?\u0027]; if((tem\u003d ua.match(/version\\/(\\d+)/i))!\u003d null) M.splice(1, 1, tem[1]); return M.join(\u0027 \u0027).replace(\u0027MSIE\u0027, \u0027IE\u0027);})();","args":[]}
T 2018-01-25 12:59:44:551 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 12:59:44:551 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 12:59:44:551 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/execute/sync {"script":"return navigator.sayswho\u003d (function() { var ua\u003d navigator.userAgent, tem, M\u003d ua.match(/(opera|chrome|safari|firefox|msie|trident)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i) || []; if (/trident/i.test(M[1])) {     tem\u003d  /\\brv[ :]+(\\d+)/g.exec(ua) || [];     return \u0027IE \u0027+(tem[1] || \u0027\u0027); } if(M[1]\u003d\u003d\u003d \u0027Chrome\u0027) {     tem\u003d ua.match(/\b(OPR|Edge)\\/(\\d+)/);     if(tem!\u003d null) return tem.slice(1).join(\u0027 \u0027).replace(\u0027OPR\u0027, \u0027Opera\u0027); } M\u003d M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, \u0027-?\u0027]; if((tem\u003d ua.match(/version\\/(\\d+)/i))!\u003d null) M.splice(1, 1, tem[1]); return M.join(\u0027 \u0027).replace(\u0027MSIE\u0027, \u0027IE\u0027);})();","args":[]}
T 2018-01-25 12:59:44:551 server.cc(378) Entering Server::LookupSession
T 2018-01-25 12:59:44:551 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 12:59:44:551 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 12:59:44:551 command.cc(31) Entering Command::Deserialize
D 2018-01-25 12:59:44:551 command.cc(36) Raw JSON command: { "name" : "executeScript", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"script":"return navigator.sayswho\u003d (function() { var ua\u003d navigator.userAgent, tem, M\u003d ua.match(/(opera|chrome|safari|firefox|msie|trident)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i) || []; if (/trident/i.test(M[1])) {     tem\u003d  /\\brv[ :]+(\\d+)/g.exec(ua) || [];     return \u0027IE \u0027+(tem[1] || \u0027\u0027); } if(M[1]\u003d\u003d\u003d \u0027Chrome\u0027) {     tem\u003d ua.match(/\b(OPR|Edge)\\/(\\d+)/);     if(tem!\u003d null) return tem.slice(1).join(\u0027 \u0027).replace(\u0027OPR\u0027, \u0027Opera\u0027); } M\u003d M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, \u0027-?\u0027]; if((tem\u003d ua.match(/version\\/(\\d+)/i))!\u003d null) M.splice(1, 1, tem[1]); return M.join(\u0027 \u0027).replace(\u0027MSIE\u0027, \u0027IE\u0027);})();","args":[]} }
T 2018-01-25 12:59:44:551 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 12:59:44:551 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 12:59:44:551 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:551 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:551 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 12:59:44:551 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 12:59:44:551 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:44:552 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:44:552 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 12:59:44:552 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:552 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:552 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 12:59:44:552 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 12:59:44:556 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 12:59:44:559 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 12:59:44:559 CommandHandlers\ExecuteScriptCommandHandler.cpp(85) Entering ExecuteScriptCommandHandler::PopulateArgumentArray
T 2018-01-25 12:59:44:559 Script.cpp(169) Entering Script::Execute
T 2018-01-25 12:59:44:559 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 12:59:44:569 Script.cpp(426) Entering Script::ConvertResultToJsonValue
T 2018-01-25 12:59:44:569 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 12:59:44:569 response.cc(78) Entering Response::SetResponse
T 2018-01-25 12:59:44:569 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:570 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:570 response.cc(51) Entering Response::Serialize
T 2018-01-25 12:59:44:572 IESession.cpp(221) Found non-zero response length
T 2018-01-25 12:59:44:572 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 12:59:44:572 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 12:59:44:572 server.cc(338) Response: {"value":"IE 11"}

T 2018-01-25 12:59:44:572 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 12:59:44:572 response.cc(30) Entering Response::Deserialize
T 2018-01-25 12:59:44:573 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 12:59:44:589 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:44:589 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 12:59:44:589 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/url HTTP verb: POST
body: {"url":"http://arsalanmushtaq:8028"}
T 2018-01-25 12:59:44:589 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 12:59:44:589 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 12:59:44:589 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/url {"url":"http://arsalanmushtaq:8028"}
T 2018-01-25 12:59:44:589 server.cc(378) Entering Server::LookupSession
T 2018-01-25 12:59:44:589 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 12:59:44:589 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 12:59:44:589 command.cc(31) Entering Command::Deserialize
D 2018-01-25 12:59:44:589 command.cc(36) Raw JSON command: { "name" : "get", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"url":"http://arsalanmushtaq:8028"} }
T 2018-01-25 12:59:44:589 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 12:59:44:589 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 12:59:44:589 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:589 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:589 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 12:59:44:589 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:44:589 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:44:590 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 12:59:44:590 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:590 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:590 Browser.cpp(318) Entring Browser::NavigateToUrl
T 2018-01-25 12:59:44:590 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 12:59:44:590 DocumentHost.cpp(142) Entering DocumentHost::SetFocusedFrameByElement
T 2018-01-25 12:59:44:590 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 12:59:44:590 response.cc(78) Entering Response::SetResponse
T 2018-01-25 12:59:44:590 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:590 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:591 response.cc(51) Entering Response::Serialize
T 2018-01-25 12:59:44:591 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 12:59:44:591 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:591 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:591 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 12:59:44:591 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 12:59:44:591 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:44:591 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 12:59:44:591 Browser.cpp(50) Entering Browser::BeforeNavigate2
D 2018-01-25 12:59:44:591 Browser.cpp(484) Browser ReadyState is not at least '4'; it was 1
T 2018-01-25 12:59:44:592 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 12:59:44:792 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 12:59:44:792 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:44:792 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:44:793 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 12:59:44:793 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 12:59:44:793 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:44:793 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:44:969 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 12:59:44:969 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 12:59:45:071 Browser.cpp(50) Entering Browser::BeforeNavigate2
T 2018-01-25 12:59:45:086 Browser.cpp(96) Entering Browser::DocumentComplete
D 2018-01-25 12:59:45:086 ElementRepository.cpp(113) Refreshing managed element cache. Found 0 to remove from cache.
T 2018-01-25 12:59:45:170 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 12:59:45:170 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:45:170 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:45:170 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 12:59:45:170 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 12:59:45:170 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:45:170 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:45:170 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 12:59:45:171 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 12:59:45:371 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 12:59:45:371 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:45:371 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:45:372 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 12:59:45:372 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 12:59:45:372 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:45:372 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:45:372 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 12:59:45:373 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 12:59:45:573 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 12:59:45:573 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:45:573 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:45:573 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 12:59:45:573 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 12:59:45:573 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:45:573 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:45:574 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 12:59:45:574 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 12:59:45:775 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 12:59:45:775 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:45:775 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:45:775 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 12:59:45:775 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 12:59:45:775 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:45:775 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:45:775 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 12:59:45:776 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 12:59:45:976 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 12:59:45:976 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:45:976 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:45:976 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 12:59:45:976 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 12:59:45:976 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:45:976 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:45:977 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 12:59:45:977 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 12:59:46:177 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 12:59:46:178 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:178 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:178 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 12:59:46:178 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 12:59:46:178 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:46:178 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:46:179 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 12:59:46:179 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 12:59:46:315 Browser.cpp(96) Entering Browser::DocumentComplete
T 2018-01-25 12:59:46:380 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 12:59:46:380 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:380 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:380 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 12:59:46:380 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 12:59:46:380 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:46:380 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:46:383 Browser.cpp(508) Waiting for document to complete...
T 2018-01-25 12:59:46:383 Browser.cpp(522) Entering Browser::IsDocumentNavigating
T 2018-01-25 12:59:46:404 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 12:59:46:416 Browser.cpp(522) Entering Browser::IsDocumentNavigating
D 2018-01-25 12:59:46:423 Browser.cpp(513) Not in navigating state
T 2018-01-25 12:59:46:427 IESession.cpp(221) Found non-zero response length
T 2018-01-25 12:59:46:427 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 12:59:46:428 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 12:59:46:428 server.cc(338) Response: {"value":null}

T 2018-01-25 12:59:46:428 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 12:59:46:428 response.cc(30) Entering Response::Deserialize
T 2018-01-25 12:59:46:428 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 12:59:46:464 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:46:464 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 12:59:46:464 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/window/maximize HTTP verb: POST
body: {}
T 2018-01-25 12:59:46:464 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 12:59:46:464 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 12:59:46:464 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/window/maximize {}
T 2018-01-25 12:59:46:464 server.cc(378) Entering Server::LookupSession
T 2018-01-25 12:59:46:464 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 12:59:46:464 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 12:59:46:464 command.cc(31) Entering Command::Deserialize
D 2018-01-25 12:59:46:464 command.cc(36) Raw JSON command: { "name" : "maximizeWindow", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {} }
T 2018-01-25 12:59:46:464 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 12:59:46:464 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 12:59:46:464 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 12:59:46:464 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:464 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:464 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 12:59:46:464 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:46:464 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:46:465 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 12:59:46:465 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:465 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:465 Browser.cpp(416) Entering Browser::GetTopLevelWindowHandle
T 2018-01-25 12:59:46:465 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 12:59:46:465 response.cc(78) Entering Response::SetResponse
T 2018-01-25 12:59:46:465 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:465 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:465 response.cc(51) Entering Response::Serialize
T 2018-01-25 12:59:46:475 IESession.cpp(221) Found non-zero response length
T 2018-01-25 12:59:46:475 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 12:59:46:475 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 12:59:46:475 server.cc(338) Response: {"value":{"height":1056,"width":1936,"x":-8,"y":-8}}

T 2018-01-25 12:59:46:475 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 12:59:46:475 response.cc(30) Entering Response::Deserialize
T 2018-01-25 12:59:46:475 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 12:59:46:497 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:46:497 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 12:59:46:497 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//div[count(. | //*[text() \u003d \u0027TFS Server URL\u0027]) \u003d count(//*[text() \u003d \u0027TFS Server URL\u0027])]","using":"xpath"}
T 2018-01-25 12:59:46:497 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 12:59:46:497 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 12:59:46:497 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//div[count(. | //*[text() \u003d \u0027TFS Server URL\u0027]) \u003d count(//*[text() \u003d \u0027TFS Server URL\u0027])]","using":"xpath"}
T 2018-01-25 12:59:46:497 server.cc(378) Entering Server::LookupSession
T 2018-01-25 12:59:46:497 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 12:59:46:497 command.cc(31) Entering Command::Deserialize
D 2018-01-25 12:59:46:497 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//div[count(. | //*[text() \u003d \u0027TFS Server URL\u0027]) \u003d count(//*[text() \u003d \u0027TFS Server URL\u0027])]","using":"xpath"} }
T 2018-01-25 12:59:46:497 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 12:59:46:497 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:46:497 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:46:497 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 12:59:46:497 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:497 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 12:59:46:497 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //div[count(. | //*[text() = 'TFS Server URL']) = count(//*[text() = 'TFS Server URL'])]
T 2018-01-25 12:59:46:497 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 12:59:46:497 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 12:59:46:503 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 12:59:46:507 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 12:59:46:507 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 12:59:46:507 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 12:59:46:507 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 12:59:46:507 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 12:59:46:507 Script.cpp(169) Entering Script::Execute
T 2018-01-25 12:59:46:507 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 12:59:46:572 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 12:59:46:574 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 12:59:46:574 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 12:59:46:577 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 12:59:46:577 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 12:59:46:577 VariantUtilities.cpp(342) Entering Script::GetArrayItem
I 2018-01-25 12:59:46:577 VariantUtilities.cpp(233) Unknown type of dispatch is found in result, assuming IHTMLElement
T 2018-01-25 12:59:46:578 IECommandExecutor.cpp(677) Entering IECommandExecutor::AddManagedElement
T 2018-01-25 12:59:46:578 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:578 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:578 ElementRepository.cpp(49) Entering ElementRepository::AddManagedElement
D 2018-01-25 12:59:46:578 ElementRepository.cpp(69) Element is not yet managed
T 2018-01-25 12:59:46:578 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 12:59:46:578 Element.cpp(45) Entering Element::Element
T 2018-01-25 12:59:46:578 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 12:59:46:579 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 12:59:46:579 response.cc(78) Entering Response::SetResponse
T 2018-01-25 12:59:46:579 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:579 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:579 response.cc(51) Entering Response::Serialize
T 2018-01-25 12:59:46:586 IESession.cpp(221) Found non-zero response length
T 2018-01-25 12:59:46:586 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 12:59:46:586 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 12:59:46:586 server.cc(338) Response: {"value":[{"element-6066-11e4-a52e-4f735466cecf":"3cf902c3-8e71-4a3e-9c89-6787eb348eb9"}]}

T 2018-01-25 12:59:46:586 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 12:59:46:586 response.cc(30) Entering Response::Deserialize
T 2018-01-25 12:59:46:586 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 12:59:46:590 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 12:59:46:590 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 12:59:46:590 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/3cf902c3-8e71-4a3e-9c89-6787eb348eb9/click HTTP verb: POST
body: {"id":"3cf902c3-8e71-4a3e-9c89-6787eb348eb9"}
T 2018-01-25 12:59:46:590 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 12:59:46:590 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 12:59:46:590 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/3cf902c3-8e71-4a3e-9c89-6787eb348eb9/click {"id":"3cf902c3-8e71-4a3e-9c89-6787eb348eb9"}
T 2018-01-25 12:59:46:590 server.cc(378) Entering Server::LookupSession
T 2018-01-25 12:59:46:590 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 12:59:46:590 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 12:59:46:590 command.cc(31) Entering Command::Deserialize
D 2018-01-25 12:59:46:590 command.cc(36) Raw JSON command: { "name" : "click", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe", "id" : "3cf902c3-8e71-4a3e-9c89-6787eb348eb9" }, "parameters" : {"id":"3cf902c3-8e71-4a3e-9c89-6787eb348eb9"} }
T 2018-01-25 12:59:46:590 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 12:59:46:590 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 12:59:46:590 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 12:59:46:590 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:590 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:590 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 12:59:46:590 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 12:59:46:590 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 12:59:46:591 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 12:59:46:591 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:591 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:591 IECommandHandler.cpp(45) Entering IECommandHandler::GetElement
T 2018-01-25 12:59:46:591 IECommandExecutor.cpp(671) Entering IECommandExecutor::GetManagedElement
T 2018-01-25 12:59:46:591 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 12:59:46:597 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 12:59:46:597 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 12:59:46:597 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 12:59:46:597 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 12:59:46:601 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 12:59:46:604 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 12:59:46:604 InputManager.cpp(81) Entering InputManager::PerformInputSequence
W 2018-01-25 13:00:16:605 InputManager.cpp(99) Could not acquire mutex within the timeout. Multiple instances may have incorrect synchronization for interactions
T 2018-01-25 13:00:16:605 InputManager.cpp(533) Entering InputManager::PointerMoveTo
T 2018-01-25 13:00:16:605 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:00:16:605 Element.cpp(217) Entering Element::GetClickLocation
T 2018-01-25 13:00:16:605 Element.cpp(90) Entering Element::IsDisplayed
T 2018-01-25 13:00:16:606 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:16:616 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:16:617 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:00:16:617 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:16:617 Script.cpp(88) Entering Script::AddArgument(bool)
T 2018-01-25 13:00:16:617 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:16:617 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:16:617 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:16:666 Element.cpp(362) Entering Element::GetLocationOnceScrolledIntoView
T 2018-01-25 13:00:16:666 Element.cpp(493) Entering Element::GetLocation
T 2018-01-25 13:00:16:668 Element.cpp(629) Entering Element::IsInline
D 2018-01-25 13:00:16:668 Element.cpp(539) Element is a block element, using IHTMLElement2::getBoundingClientRect
T 2018-01-25 13:00:16:687 Element.cpp(650) Entering Element::RectHasNonZeroDimensions
T 2018-01-25 13:00:16:690 Element.cpp(666) Entering Element::GetFrameDetails
T 2018-01-25 13:00:16:690 Element.cpp(956) Entering Element::GetContainingDocument
D 2018-01-25 13:00:16:701 Element.cpp(616) Element is not in a frame
T 2018-01-25 13:00:16:701 Element.cpp(905) Entering Element::CalculateClickPoint
T 2018-01-25 13:00:16:701 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:00:16:701 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:16:702 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:00:16:711 Element.cpp(931) Entering Element::IsLocationInViewPort
T 2018-01-25 13:00:16:711 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:00:16:711 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:16:713 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:00:16:726 Element.cpp(429) Entering Element::IsHiddenByOverflow
T 2018-01-25 13:00:16:726 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:16:730 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:16:730 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:00:16:730 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:16:730 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:16:730 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:16:786 Script.cpp(433) Entering Script::ConvertResultToString
D 2018-01-25 13:00:16:786 VariantUtilities.cpp(135) Result type is string
D 2018-01-25 13:00:16:787 Element.cpp(408) (x, y, w, h): 1479, 171, 450, 20
T 2018-01-25 13:00:16:787 Element.cpp(905) Entering Element::CalculateClickPoint
T 2018-01-25 13:00:16:787 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:00:16:787 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:16:790 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
D 2018-01-25 13:00:16:807 InputManager.cpp(627) Queueing SendInput structure for mouse move (origin: 3cf902c3-8e71-4a3e-9c89-6787eb348eb9, x: 1704, y: 181)
T 2018-01-25 13:00:16:807 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:807 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:808 InputManager.cpp(695) Entering InputManager::PointerDown
T 2018-01-25 13:00:16:808 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:00:16:808 InputManager.cpp(699) Queueing SendInput structure for mouse button down
T 2018-01-25 13:00:16:808 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:00:16:808 InputManager.cpp(734) Entering InputManager::PointerUp
T 2018-01-25 13:00:16:808 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:00:16:808 InputManager.cpp(738) Queueing SendInput structure for mouse button up
T 2018-01-25 13:00:16:808 InputManager.cpp(886) Entering InputManager::AddMouseInput
D 2018-01-25 13:00:16:808 InputManager.cpp(185) Processing a total of 16 input events
T 2018-01-25 13:00:16:808 InputManager.cpp(279) Entering InputManager::PerformInputWithSendMessage
T 2018-01-25 13:00:16:808 HookProcessor.cpp(94) Entering HookProcessor::Initialize
T 2018-01-25 13:00:16:808 HookProcessor.cpp(104) Entering HookProcessor::Initialize
T 2018-01-25 13:00:16:808 HookProcessor.cpp(167) Entering HookProcessor::InstallWindowsHook
T 2018-01-25 13:00:16:808 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:17:046 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:00:17:046 HookProcessor.cpp(197) Entering HookProcessor::UninstallWindowsHook
T 2018-01-25 13:00:17:047 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:00:17:608 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:00:17:608 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:00:17:608 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:608 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:608 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:00:17:608 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:00:17:608 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:608 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:608 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:00:17:608 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:00:17:608 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:00:17:608 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:00:17:614 Browser.cpp(508) Waiting for document to complete...
T 2018-01-25 13:00:17:614 Browser.cpp(522) Entering Browser::IsDocumentNavigating
T 2018-01-25 13:00:17:636 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:00:17:646 Browser.cpp(522) Entering Browser::IsDocumentNavigating
D 2018-01-25 13:00:17:653 Browser.cpp(513) Not in navigating state
T 2018-01-25 13:00:17:661 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:00:17:661 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:00:17:661 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:00:17:661 server.cc(338) Response: {"value":null}

T 2018-01-25 13:00:17:661 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:00:17:661 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:00:17:662 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:00:17:710 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:00:17:710 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:00:17:710 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//input[count(. | //*[@id \u003d \u0027tfsServerURL\u0027]) \u003d count(//*[@id \u003d \u0027tfsServerURL\u0027])][count(. | //*[@name \u003d \u0027TFSServerURL\u0027]) \u003d count(//*[@name \u003d \u0027TFSServerURL\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"}
T 2018-01-25 13:00:17:710 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:00:17:710 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:00:17:710 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//input[count(. | //*[@id \u003d \u0027tfsServerURL\u0027]) \u003d count(//*[@id \u003d \u0027tfsServerURL\u0027])][count(. | //*[@name \u003d \u0027TFSServerURL\u0027]) \u003d count(//*[@name \u003d \u0027TFSServerURL\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"}
T 2018-01-25 13:00:17:710 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:00:17:710 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:00:17:710 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:00:17:710 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:00:17:710 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//input[count(. | //*[@id \u003d \u0027tfsServerURL\u0027]) \u003d count(//*[@id \u003d \u0027tfsServerURL\u0027])][count(. | //*[@name \u003d \u0027TFSServerURL\u0027]) \u003d count(//*[@name \u003d \u0027TFSServerURL\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"} }
T 2018-01-25 13:00:17:711 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:00:17:711 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:00:17:711 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:00:17:711 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:711 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:711 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:00:17:711 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:00:17:711 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:00:17:711 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:00:17:711 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:00:17:711 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:00:17:711 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:00:17:711 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:711 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:00:17:711 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[count(. | //*[@id = 'tfsServerURL']) = count(//*[@id = 'tfsServerURL'])][count(. | //*[@name = 'TFSServerURL']) = count(//*[@name = 'TFSServerURL'])][count(. | //*[@type = 'text']) = count(//*[@type = 'text'])]
T 2018-01-25 13:00:17:711 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:00:17:711 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:00:17:719 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:00:17:724 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:17:724 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:00:17:724 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:17:724 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:00:17:724 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:17:724 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:17:724 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:17:747 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:00:17:748 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:00:17:749 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:00:17:750 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:00:17:750 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:00:17:750 VariantUtilities.cpp(342) Entering Script::GetArrayItem
I 2018-01-25 13:00:17:751 VariantUtilities.cpp(233) Unknown type of dispatch is found in result, assuming IHTMLElement
T 2018-01-25 13:00:17:751 IECommandExecutor.cpp(677) Entering IECommandExecutor::AddManagedElement
T 2018-01-25 13:00:17:751 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:751 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:751 ElementRepository.cpp(49) Entering ElementRepository::AddManagedElement
D 2018-01-25 13:00:17:751 ElementRepository.cpp(69) Element is not yet managed
T 2018-01-25 13:00:17:751 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:17:751 Element.cpp(45) Entering Element::Element
T 2018-01-25 13:00:17:751 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:00:17:751 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:00:17:751 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:00:17:751 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:751 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:751 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:00:17:754 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:00:17:754 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:00:17:754 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:00:17:754 server.cc(338) Response: {"value":[{"element-6066-11e4-a52e-4f735466cecf":"faa2a182-acff-42ba-a851-d65f3981e580"}]}

T 2018-01-25 13:00:17:754 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:00:17:754 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:00:17:754 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:00:17:757 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:00:17:757 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:00:17:757 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/faa2a182-acff-42ba-a851-d65f3981e580/clear HTTP verb: POST
body: {"id":"faa2a182-acff-42ba-a851-d65f3981e580"}
T 2018-01-25 13:00:17:757 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:00:17:757 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:00:17:757 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/faa2a182-acff-42ba-a851-d65f3981e580/clear {"id":"faa2a182-acff-42ba-a851-d65f3981e580"}
T 2018-01-25 13:00:17:757 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:00:17:757 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:00:17:757 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:00:17:757 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:00:17:757 command.cc(36) Raw JSON command: { "name" : "clear", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe", "id" : "faa2a182-acff-42ba-a851-d65f3981e580" }, "parameters" : {"id":"faa2a182-acff-42ba-a851-d65f3981e580"} }
T 2018-01-25 13:00:17:757 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:00:17:757 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:00:17:757 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:00:17:757 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:757 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:757 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:00:17:757 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:00:17:757 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:00:17:757 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:00:17:757 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:757 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:757 IECommandHandler.cpp(45) Entering IECommandHandler::GetElement
T 2018-01-25 13:00:17:757 IECommandExecutor.cpp(671) Entering IECommandExecutor::GetManagedElement
T 2018-01-25 13:00:17:757 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:00:17:761 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:761 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:761 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:00:17:761 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:00:17:764 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:00:17:766 Element.cpp(161) Entering Element::IsInteractable
T 2018-01-25 13:00:17:766 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:17:767 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:17:767 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:00:17:767 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:17:767 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:17:767 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:17:779 Element.cpp(188) Entering Element::IsEditable
T 2018-01-25 13:00:17:779 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:17:780 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:17:780 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:00:17:780 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:17:780 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:17:780 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:17:789 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:00:17:789 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:00:17:793 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:00:17:794 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:17:795 Script.cpp(94) Entering Script::AddArgument(ElementHandle)
T 2018-01-25 13:00:17:795 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:00:17:795 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:17:795 Script.cpp(264) Entering Script::ExecuteAsync
D 2018-01-25 13:00:17:795 Script.cpp(297) Creating synchronization event for new thread
D 2018-01-25 13:00:17:795 Script.cpp(317) Starting new thread
D 2018-01-25 13:00:17:795 Script.cpp(326) Waiting for new thread to be ready for messages
T 2018-01-25 13:00:17:795 AsyncScriptExecutor.cpp(170) Entering AsyncScriptExecutor::ThreadProc
T 2018-01-25 13:00:17:795 AsyncScriptExecutor.cpp(40) Entering AsyncScriptExecutor::OnCreate
D 2018-01-25 13:00:17:795 Script.cpp(346) Marshaling document to stream to send to new thread
T 2018-01-25 13:00:17:795 AsyncScriptExecutor.cpp(82) Entering AsyncScriptExecutor::OnSetDocument
T 2018-01-25 13:00:17:796 AsyncScriptExecutor.cpp(95) Entering AsyncScriptExecutor::OnSetArgument
T 2018-01-25 13:00:17:796 Script.cpp(396) Waiting for async script execution to be complete
T 2018-01-25 13:00:17:796 AsyncScriptExecutor.cpp(125) Entering AsyncScriptExecutor::OnExecuteScript
T 2018-01-25 13:00:17:796 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:17:796 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:17:796 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:17:796 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:17:827 Script.cpp(414) Async script execution completed, getting result
T 2018-01-25 13:00:17:827 AsyncScriptExecutor.cpp(160) Entering AsyncScriptExecutor::OnGetResult
T 2018-01-25 13:00:17:827 AsyncScriptExecutor.cpp(63) Entering AsyncScriptExecutor::OnClose
T 2018-01-25 13:00:17:828 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:00:17:828 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:00:17:828 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:828 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:828 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:00:17:828 AsyncScriptExecutor.cpp(72) Entering AsyncAtomExecutor::OnDestroy
T 2018-01-25 13:00:17:838 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:00:17:838 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:00:17:839 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:00:17:839 server.cc(338) Response: {"value":null}

T 2018-01-25 13:00:17:839 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:00:17:839 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:00:17:839 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:00:17:843 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:00:17:843 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:00:17:843 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//input[count(. | //*[@id \u003d \u0027tfsServerURL\u0027]) \u003d count(//*[@id \u003d \u0027tfsServerURL\u0027])][count(. | //*[@name \u003d \u0027TFSServerURL\u0027]) \u003d count(//*[@name \u003d \u0027TFSServerURL\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"}
T 2018-01-25 13:00:17:843 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:00:17:843 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:00:17:843 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//input[count(. | //*[@id \u003d \u0027tfsServerURL\u0027]) \u003d count(//*[@id \u003d \u0027tfsServerURL\u0027])][count(. | //*[@name \u003d \u0027TFSServerURL\u0027]) \u003d count(//*[@name \u003d \u0027TFSServerURL\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"}
T 2018-01-25 13:00:17:843 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:00:17:843 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:00:17:843 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:00:17:843 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:00:17:843 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//input[count(. | //*[@id \u003d \u0027tfsServerURL\u0027]) \u003d count(//*[@id \u003d \u0027tfsServerURL\u0027])][count(. | //*[@name \u003d \u0027TFSServerURL\u0027]) \u003d count(//*[@name \u003d \u0027TFSServerURL\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"} }
T 2018-01-25 13:00:17:843 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:00:17:843 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:00:17:843 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:00:17:843 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:843 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:843 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:00:17:843 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:00:17:843 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:00:17:844 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:00:17:844 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:00:17:844 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:00:17:844 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:00:17:844 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:844 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:00:17:844 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[count(. | //*[@id = 'tfsServerURL']) = count(//*[@id = 'tfsServerURL'])][count(. | //*[@name = 'TFSServerURL']) = count(//*[@name = 'TFSServerURL'])][count(. | //*[@type = 'text']) = count(//*[@type = 'text'])]
T 2018-01-25 13:00:17:844 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:00:17:844 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:00:17:854 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:00:17:858 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:17:858 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:00:17:858 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:17:858 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:00:17:858 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:17:858 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:17:858 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:17:890 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:00:17:892 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:00:17:893 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:00:17:895 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:00:17:895 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:00:17:895 VariantUtilities.cpp(342) Entering Script::GetArrayItem
I 2018-01-25 13:00:17:896 VariantUtilities.cpp(233) Unknown type of dispatch is found in result, assuming IHTMLElement
T 2018-01-25 13:00:17:896 IECommandExecutor.cpp(677) Entering IECommandExecutor::AddManagedElement
T 2018-01-25 13:00:17:896 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:896 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:896 ElementRepository.cpp(49) Entering ElementRepository::AddManagedElement
D 2018-01-25 13:00:17:896 ElementRepository.cpp(75) Element is already managed
T 2018-01-25 13:00:17:896 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:00:17:897 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:00:17:897 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:00:17:897 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:897 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:897 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:00:17:898 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:00:17:898 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:00:17:898 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:00:17:898 server.cc(338) Response: {"value":[{"element-6066-11e4-a52e-4f735466cecf":"faa2a182-acff-42ba-a851-d65f3981e580"}]}

T 2018-01-25 13:00:17:898 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:00:17:898 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:00:17:899 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:00:17:911 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:00:17:911 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:00:17:912 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/faa2a182-acff-42ba-a851-d65f3981e580/value HTTP verb: POST
body: {"id":"faa2a182-acff-42ba-a851-d65f3981e580","text":"http://arsalanmushtaq:8080/tfs","value":["h","t","t","p",":","/","/","a","r","s","a","l","a","n","m","u","s","h","t","a","q",":","8","0","8","0","/","t","f","s"]}
T 2018-01-25 13:00:17:912 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:00:17:912 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:00:17:912 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/faa2a182-acff-42ba-a851-d65f3981e580/value {"id":"faa2a182-acff-42ba-a851-d65f3981e580","text":"http://arsalanmushtaq:8080/tfs","value":["h","t","t","p",":","/","/","a","r","s","a","l","a","n","m","u","s","h","t","a","q",":","8","0","8","0","/","t","f","s"]}
T 2018-01-25 13:00:17:912 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:00:17:912 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:00:17:912 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:00:17:912 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:00:17:912 command.cc(36) Raw JSON command: { "name" : "sendKeys", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe", "id" : "faa2a182-acff-42ba-a851-d65f3981e580" }, "parameters" : {"id":"faa2a182-acff-42ba-a851-d65f3981e580","text":"http://arsalanmushtaq:8080/tfs","value":["h","t","t","p",":","/","/","a","r","s","a","l","a","n","m","u","s","h","t","a","q",":","8","0","8","0","/","t","f","s"]} }
T 2018-01-25 13:00:17:912 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:00:17:912 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:00:17:912 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:00:17:912 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:912 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:912 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:00:17:912 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:00:17:912 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:00:17:912 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:00:17:912 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:912 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:912 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:17:912 Browser.cpp(416) Entering Browser::GetTopLevelWindowHandle
T 2018-01-25 13:00:17:913 IECommandHandler.cpp(45) Entering IECommandHandler::GetElement
T 2018-01-25 13:00:17:913 IECommandExecutor.cpp(671) Entering IECommandExecutor::GetManagedElement
T 2018-01-25 13:00:17:913 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:00:17:918 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:17:918 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:17:918 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:00:17:918 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:00:17:927 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:00:17:931 Element.cpp(362) Entering Element::GetLocationOnceScrolledIntoView
T 2018-01-25 13:00:17:931 Element.cpp(493) Entering Element::GetLocation
T 2018-01-25 13:00:17:932 Element.cpp(629) Entering Element::IsInline
D 2018-01-25 13:00:17:933 Element.cpp(539) Element is a block element, using IHTMLElement2::getBoundingClientRect
T 2018-01-25 13:00:17:938 Element.cpp(650) Entering Element::RectHasNonZeroDimensions
T 2018-01-25 13:00:17:941 Element.cpp(666) Entering Element::GetFrameDetails
T 2018-01-25 13:00:17:941 Element.cpp(956) Entering Element::GetContainingDocument
D 2018-01-25 13:00:17:950 Element.cpp(616) Element is not in a frame
T 2018-01-25 13:00:17:950 Element.cpp(905) Entering Element::CalculateClickPoint
T 2018-01-25 13:00:17:950 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:00:17:950 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:17:951 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:00:17:959 Element.cpp(931) Entering Element::IsLocationInViewPort
T 2018-01-25 13:00:17:959 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:00:17:959 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:17:961 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:00:17:968 Element.cpp(429) Entering Element::IsHiddenByOverflow
T 2018-01-25 13:00:17:969 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:17:970 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:17:970 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:00:17:970 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:17:970 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:17:970 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:18:018 Script.cpp(433) Entering Script::ConvertResultToString
D 2018-01-25 13:00:18:018 VariantUtilities.cpp(135) Result type is string
D 2018-01-25 13:00:18:019 Element.cpp(408) (x, y, w, h): 1470, 167, 382, 27
T 2018-01-25 13:00:18:024 Element.cpp(90) Entering Element::IsDisplayed
T 2018-01-25 13:00:18:025 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:18:027 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:18:027 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:00:18:027 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:18:027 Script.cpp(88) Entering Script::AddArgument(bool)
T 2018-01-25 13:00:18:027 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:18:027 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:18:027 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:18:057 Element.cpp(134) Entering Element::IsEnabled
T 2018-01-25 13:00:18:057 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:00:18:058 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:18:058 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:00:18:058 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:18:058 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:18:058 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:18:072 InputManager.cpp(81) Entering InputManager::PerformInputSequence
W 2018-01-25 13:00:48:072 InputManager.cpp(99) Could not acquire mutex within the timeout. Multiple instances may have incorrect synchronization for interactions
T 2018-01-25 13:00:48:073 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:073 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:073 InputManager.cpp(906) Queueing SendInput structure for key down (key: h)
T 2018-01-25 13:00:48:073 InputManager.cpp(996) Adding key: h
T 2018-01-25 13:00:48:074 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:074 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:074 InputManager.cpp(906) Queueing SendInput structure for key up (key: h)
T 2018-01-25 13:00:48:074 InputManager.cpp(999) Removing key: h
T 2018-01-25 13:00:48:074 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:074 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:074 InputManager.cpp(906) Queueing SendInput structure for key down (key: t)
T 2018-01-25 13:00:48:074 InputManager.cpp(996) Adding key: t
T 2018-01-25 13:00:48:074 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:074 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:074 InputManager.cpp(906) Queueing SendInput structure for key up (key: t)
T 2018-01-25 13:00:48:074 InputManager.cpp(999) Removing key: t
T 2018-01-25 13:00:48:074 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:074 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:074 InputManager.cpp(906) Queueing SendInput structure for key down (key: t)
T 2018-01-25 13:00:48:074 InputManager.cpp(996) Adding key: t
T 2018-01-25 13:00:48:074 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:074 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:074 InputManager.cpp(906) Queueing SendInput structure for key up (key: t)
T 2018-01-25 13:00:48:074 InputManager.cpp(999) Removing key: t
T 2018-01-25 13:00:48:074 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:074 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:074 InputManager.cpp(906) Queueing SendInput structure for key down (key: p)
T 2018-01-25 13:00:48:074 InputManager.cpp(996) Adding key: p
T 2018-01-25 13:00:48:074 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:074 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:074 InputManager.cpp(906) Queueing SendInput structure for key up (key: p)
T 2018-01-25 13:00:48:074 InputManager.cpp(999) Removing key: p
T 2018-01-25 13:00:48:074 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:074 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:074 InputManager.cpp(906) Queueing SendInput structure for key down (key: :)
T 2018-01-25 13:00:48:074 InputManager.cpp(996) Adding key: :
T 2018-01-25 13:00:48:074 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:075 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:075 InputManager.cpp(906) Queueing SendInput structure for key up (key: :)
T 2018-01-25 13:00:48:075 InputManager.cpp(999) Removing key: :
T 2018-01-25 13:00:48:075 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:075 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:075 InputManager.cpp(906) Queueing SendInput structure for key down (key: /)
T 2018-01-25 13:00:48:075 InputManager.cpp(996) Adding key: /
T 2018-01-25 13:00:48:075 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:075 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:075 InputManager.cpp(906) Queueing SendInput structure for key up (key: /)
T 2018-01-25 13:00:48:075 InputManager.cpp(999) Removing key: /
T 2018-01-25 13:00:48:075 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:075 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:075 InputManager.cpp(906) Queueing SendInput structure for key down (key: /)
T 2018-01-25 13:00:48:075 InputManager.cpp(996) Adding key: /
T 2018-01-25 13:00:48:075 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:075 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:075 InputManager.cpp(906) Queueing SendInput structure for key up (key: /)
T 2018-01-25 13:00:48:075 InputManager.cpp(999) Removing key: /
T 2018-01-25 13:00:48:075 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:075 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:075 InputManager.cpp(906) Queueing SendInput structure for key down (key: a)
T 2018-01-25 13:00:48:075 InputManager.cpp(996) Adding key: a
T 2018-01-25 13:00:48:075 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:075 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:075 InputManager.cpp(906) Queueing SendInput structure for key up (key: a)
T 2018-01-25 13:00:48:075 InputManager.cpp(999) Removing key: a
T 2018-01-25 13:00:48:075 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:075 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:075 InputManager.cpp(906) Queueing SendInput structure for key down (key: r)
T 2018-01-25 13:00:48:075 InputManager.cpp(996) Adding key: r
T 2018-01-25 13:00:48:076 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:076 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:076 InputManager.cpp(906) Queueing SendInput structure for key up (key: r)
T 2018-01-25 13:00:48:076 InputManager.cpp(999) Removing key: r
T 2018-01-25 13:00:48:076 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:076 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:076 InputManager.cpp(906) Queueing SendInput structure for key down (key: s)
T 2018-01-25 13:00:48:076 InputManager.cpp(996) Adding key: s
T 2018-01-25 13:00:48:076 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:076 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:076 InputManager.cpp(906) Queueing SendInput structure for key up (key: s)
T 2018-01-25 13:00:48:076 InputManager.cpp(999) Removing key: s
T 2018-01-25 13:00:48:076 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:076 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:076 InputManager.cpp(906) Queueing SendInput structure for key down (key: a)
T 2018-01-25 13:00:48:076 InputManager.cpp(996) Adding key: a
T 2018-01-25 13:00:48:076 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:076 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:076 InputManager.cpp(906) Queueing SendInput structure for key up (key: a)
T 2018-01-25 13:00:48:076 InputManager.cpp(999) Removing key: a
T 2018-01-25 13:00:48:076 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:076 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:076 InputManager.cpp(906) Queueing SendInput structure for key down (key: l)
T 2018-01-25 13:00:48:076 InputManager.cpp(996) Adding key: l
T 2018-01-25 13:00:48:076 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:076 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:076 InputManager.cpp(906) Queueing SendInput structure for key up (key: l)
T 2018-01-25 13:00:48:076 InputManager.cpp(999) Removing key: l
T 2018-01-25 13:00:48:076 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:076 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:076 InputManager.cpp(906) Queueing SendInput structure for key down (key: a)
T 2018-01-25 13:00:48:076 InputManager.cpp(996) Adding key: a
T 2018-01-25 13:00:48:076 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:076 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:077 InputManager.cpp(906) Queueing SendInput structure for key up (key: a)
T 2018-01-25 13:00:48:077 InputManager.cpp(999) Removing key: a
T 2018-01-25 13:00:48:077 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:077 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:077 InputManager.cpp(906) Queueing SendInput structure for key down (key: n)
T 2018-01-25 13:00:48:077 InputManager.cpp(996) Adding key: n
T 2018-01-25 13:00:48:077 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:077 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:077 InputManager.cpp(906) Queueing SendInput structure for key up (key: n)
T 2018-01-25 13:00:48:077 InputManager.cpp(999) Removing key: n
T 2018-01-25 13:00:48:077 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:077 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:077 InputManager.cpp(906) Queueing SendInput structure for key down (key: m)
T 2018-01-25 13:00:48:077 InputManager.cpp(996) Adding key: m
T 2018-01-25 13:00:48:077 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:077 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:077 InputManager.cpp(906) Queueing SendInput structure for key up (key: m)
T 2018-01-25 13:00:48:077 InputManager.cpp(999) Removing key: m
T 2018-01-25 13:00:48:077 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:077 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:077 InputManager.cpp(906) Queueing SendInput structure for key down (key: u)
T 2018-01-25 13:00:48:077 InputManager.cpp(996) Adding key: u
T 2018-01-25 13:00:48:077 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:077 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:077 InputManager.cpp(906) Queueing SendInput structure for key up (key: u)
T 2018-01-25 13:00:48:077 InputManager.cpp(999) Removing key: u
T 2018-01-25 13:00:48:077 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:077 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:077 InputManager.cpp(906) Queueing SendInput structure for key down (key: s)
T 2018-01-25 13:00:48:077 InputManager.cpp(996) Adding key: s
T 2018-01-25 13:00:48:077 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:077 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:077 InputManager.cpp(906) Queueing SendInput structure for key up (key: s)
T 2018-01-25 13:00:48:077 InputManager.cpp(999) Removing key: s
T 2018-01-25 13:00:48:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:078 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:078 InputManager.cpp(906) Queueing SendInput structure for key down (key: h)
T 2018-01-25 13:00:48:078 InputManager.cpp(996) Adding key: h
T 2018-01-25 13:00:48:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:078 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:078 InputManager.cpp(906) Queueing SendInput structure for key up (key: h)
T 2018-01-25 13:00:48:078 InputManager.cpp(999) Removing key: h
T 2018-01-25 13:00:48:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:078 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:078 InputManager.cpp(906) Queueing SendInput structure for key down (key: t)
T 2018-01-25 13:00:48:078 InputManager.cpp(996) Adding key: t
T 2018-01-25 13:00:48:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:078 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:078 InputManager.cpp(906) Queueing SendInput structure for key up (key: t)
T 2018-01-25 13:00:48:078 InputManager.cpp(999) Removing key: t
T 2018-01-25 13:00:48:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:078 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:078 InputManager.cpp(906) Queueing SendInput structure for key down (key: a)
T 2018-01-25 13:00:48:078 InputManager.cpp(996) Adding key: a
T 2018-01-25 13:00:48:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:078 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:078 InputManager.cpp(906) Queueing SendInput structure for key up (key: a)
T 2018-01-25 13:00:48:078 InputManager.cpp(999) Removing key: a
T 2018-01-25 13:00:48:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:078 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:078 InputManager.cpp(906) Queueing SendInput structure for key down (key: q)
T 2018-01-25 13:00:48:078 InputManager.cpp(996) Adding key: q
T 2018-01-25 13:00:48:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:078 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:078 InputManager.cpp(906) Queueing SendInput structure for key up (key: q)
T 2018-01-25 13:00:48:078 InputManager.cpp(999) Removing key: q
T 2018-01-25 13:00:48:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:078 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:078 InputManager.cpp(906) Queueing SendInput structure for key down (key: :)
T 2018-01-25 13:00:48:079 InputManager.cpp(996) Adding key: :
T 2018-01-25 13:00:48:079 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:079 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:079 InputManager.cpp(906) Queueing SendInput structure for key up (key: :)
T 2018-01-25 13:00:48:079 InputManager.cpp(999) Removing key: :
T 2018-01-25 13:00:48:079 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:079 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:079 InputManager.cpp(906) Queueing SendInput structure for key down (key: 8)
T 2018-01-25 13:00:48:079 InputManager.cpp(996) Adding key: 8
T 2018-01-25 13:00:48:079 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:079 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:079 InputManager.cpp(906) Queueing SendInput structure for key up (key: 8)
T 2018-01-25 13:00:48:079 InputManager.cpp(999) Removing key: 8
T 2018-01-25 13:00:48:079 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:079 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:079 InputManager.cpp(906) Queueing SendInput structure for key down (key: 0)
T 2018-01-25 13:00:48:079 InputManager.cpp(996) Adding key: 0
T 2018-01-25 13:00:48:079 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:079 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:079 InputManager.cpp(906) Queueing SendInput structure for key up (key: 0)
T 2018-01-25 13:00:48:079 InputManager.cpp(999) Removing key: 0
T 2018-01-25 13:00:48:079 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:079 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:079 InputManager.cpp(906) Queueing SendInput structure for key down (key: 8)
T 2018-01-25 13:00:48:079 InputManager.cpp(996) Adding key: 8
T 2018-01-25 13:00:48:079 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:079 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:079 InputManager.cpp(906) Queueing SendInput structure for key up (key: 8)
T 2018-01-25 13:00:48:079 InputManager.cpp(999) Removing key: 8
T 2018-01-25 13:00:48:079 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:079 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:079 InputManager.cpp(906) Queueing SendInput structure for key down (key: 0)
T 2018-01-25 13:00:48:079 InputManager.cpp(996) Adding key: 0
T 2018-01-25 13:00:48:079 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:080 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:080 InputManager.cpp(906) Queueing SendInput structure for key up (key: 0)
T 2018-01-25 13:00:48:080 InputManager.cpp(999) Removing key: 0
T 2018-01-25 13:00:48:080 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:080 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:080 InputManager.cpp(906) Queueing SendInput structure for key down (key: /)
T 2018-01-25 13:00:48:080 InputManager.cpp(996) Adding key: /
T 2018-01-25 13:00:48:080 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:080 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:080 InputManager.cpp(906) Queueing SendInput structure for key up (key: /)
T 2018-01-25 13:00:48:080 InputManager.cpp(999) Removing key: /
T 2018-01-25 13:00:48:080 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:080 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:080 InputManager.cpp(906) Queueing SendInput structure for key down (key: t)
T 2018-01-25 13:00:48:080 InputManager.cpp(996) Adding key: t
T 2018-01-25 13:00:48:080 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:080 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:080 InputManager.cpp(906) Queueing SendInput structure for key up (key: t)
T 2018-01-25 13:00:48:080 InputManager.cpp(999) Removing key: t
T 2018-01-25 13:00:48:080 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:080 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:080 InputManager.cpp(906) Queueing SendInput structure for key down (key: f)
T 2018-01-25 13:00:48:080 InputManager.cpp(996) Adding key: f
T 2018-01-25 13:00:48:080 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:080 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:080 InputManager.cpp(906) Queueing SendInput structure for key up (key: f)
T 2018-01-25 13:00:48:080 InputManager.cpp(999) Removing key: f
T 2018-01-25 13:00:48:080 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:080 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:080 InputManager.cpp(906) Queueing SendInput structure for key down (key: s)
T 2018-01-25 13:00:48:080 InputManager.cpp(996) Adding key: s
T 2018-01-25 13:00:48:080 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:080 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:080 InputManager.cpp(906) Queueing SendInput structure for key up (key: s)
T 2018-01-25 13:00:48:081 InputManager.cpp(999) Removing key: s
T 2018-01-25 13:00:48:081 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:081 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:081 InputManager.cpp(906) Queueing SendInput structure for key down (key: Unidentified)
T 2018-01-25 13:00:48:081 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:081 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:00:48:081 InputManager.cpp(906) Queueing SendInput structure for key up (key: Unidentified)
D 2018-01-25 13:00:48:081 InputManager.cpp(185) Processing a total of 64 input events
T 2018-01-25 13:00:48:081 InputManager.cpp(279) Entering InputManager::PerformInputWithSendMessage
T 2018-01-25 13:00:48:081 HookProcessor.cpp(94) Entering HookProcessor::Initialize
T 2018-01-25 13:00:48:081 HookProcessor.cpp(104) Entering HookProcessor::Initialize
T 2018-01-25 13:00:48:081 HookProcessor.cpp(167) Entering HookProcessor::InstallWindowsHook
T 2018-01-25 13:00:48:081 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:262 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:00:48:262 HookProcessor.cpp(197) Entering HookProcessor::UninstallWindowsHook
T 2018-01-25 13:00:48:262 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:00:48:313 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:00:48:313 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:00:48:313 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:48:313 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:48:313 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:00:48:313 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:00:48:313 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:00:48:313 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:00:48:313 server.cc(338) Response: {"value":null}

T 2018-01-25 13:00:48:313 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:00:48:313 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:00:48:313 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:00:48:321 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:00:48:321 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:00:48:321 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//div[count(. | //*[@title \u003d \u0027Enter User ID\u0027]) \u003d count(//*[@title \u003d \u0027Enter User ID\u0027])][count(. | //*[text() \u003d \u0027User ID\u0027]) \u003d count(//*[text() \u003d \u0027User ID\u0027])]","using":"xpath"}
T 2018-01-25 13:00:48:321 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:00:48:321 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:00:48:321 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//div[count(. | //*[@title \u003d \u0027Enter User ID\u0027]) \u003d count(//*[@title \u003d \u0027Enter User ID\u0027])][count(. | //*[text() \u003d \u0027User ID\u0027]) \u003d count(//*[text() \u003d \u0027User ID\u0027])]","using":"xpath"}
T 2018-01-25 13:00:48:321 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:00:48:321 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:00:48:321 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:00:48:321 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//div[count(. | //*[@title \u003d \u0027Enter User ID\u0027]) \u003d count(//*[@title \u003d \u0027Enter User ID\u0027])][count(. | //*[text() \u003d \u0027User ID\u0027]) \u003d count(//*[text() \u003d \u0027User ID\u0027])]","using":"xpath"} }
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:00:48:321 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:00:48:321 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:00:48:321 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:00:48:321 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:00:48:321 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:48:321 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:00:48:321 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //div[count(. | //*[@title = 'Enter User ID']) = count(//*[@title = 'Enter User ID'])][count(. | //*[text() = 'User ID']) = count(//*[text() = 'User ID'])]
T 2018-01-25 13:00:48:321 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:00:48:321 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:00:48:333 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:00:48:337 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:00:48:338 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:00:48:338 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:48:338 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:00:48:338 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:00:48:338 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:00:48:338 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:00:48:375 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:00:48:376 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:00:48:376 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:00:48:377 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:00:48:377 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:00:48:378 VariantUtilities.cpp(342) Entering Script::GetArrayItem
I 2018-01-25 13:00:48:379 VariantUtilities.cpp(233) Unknown type of dispatch is found in result, assuming IHTMLElement
T 2018-01-25 13:00:48:379 IECommandExecutor.cpp(677) Entering IECommandExecutor::AddManagedElement
T 2018-01-25 13:00:48:379 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:48:379 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:48:379 ElementRepository.cpp(49) Entering ElementRepository::AddManagedElement
D 2018-01-25 13:00:48:379 ElementRepository.cpp(69) Element is not yet managed
T 2018-01-25 13:00:48:379 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:00:48:379 Element.cpp(45) Entering Element::Element
T 2018-01-25 13:00:48:379 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:00:48:379 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:00:48:379 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:00:48:379 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:48:379 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:48:379 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:00:48:388 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:00:48:388 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:00:48:388 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:00:48:388 server.cc(338) Response: {"value":[{"element-6066-11e4-a52e-4f735466cecf":"d9e0d561-c308-4504-89a1-d7012d5bd56e"}]}

T 2018-01-25 13:00:48:388 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:00:48:388 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:00:48:388 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:00:48:391 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:00:48:391 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:00:48:391 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/d9e0d561-c308-4504-89a1-d7012d5bd56e/click HTTP verb: POST
body: {"id":"d9e0d561-c308-4504-89a1-d7012d5bd56e"}
T 2018-01-25 13:00:48:391 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:00:48:391 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:00:48:391 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/d9e0d561-c308-4504-89a1-d7012d5bd56e/click {"id":"d9e0d561-c308-4504-89a1-d7012d5bd56e"}
T 2018-01-25 13:00:48:392 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:00:48:392 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:00:48:392 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:00:48:392 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:00:48:392 command.cc(36) Raw JSON command: { "name" : "click", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe", "id" : "d9e0d561-c308-4504-89a1-d7012d5bd56e" }, "parameters" : {"id":"d9e0d561-c308-4504-89a1-d7012d5bd56e"} }
T 2018-01-25 13:00:48:392 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:00:48:392 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:00:48:392 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:48:392 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:48:392 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:00:48:392 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:00:48:392 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:00:48:392 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:00:48:392 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:00:48:392 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:48:392 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:48:392 IECommandHandler.cpp(45) Entering IECommandHandler::GetElement
T 2018-01-25 13:00:48:392 IECommandExecutor.cpp(671) Entering IECommandExecutor::GetManagedElement
T 2018-01-25 13:00:48:392 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:00:48:396 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:00:48:396 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:00:48:396 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:00:48:396 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:00:48:400 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:00:48:402 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:00:48:403 InputManager.cpp(81) Entering InputManager::PerformInputSequence
W 2018-01-25 13:01:18:403 InputManager.cpp(99) Could not acquire mutex within the timeout. Multiple instances may have incorrect synchronization for interactions
T 2018-01-25 13:01:18:403 InputManager.cpp(533) Entering InputManager::PointerMoveTo
T 2018-01-25 13:01:18:403 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:01:18:403 Element.cpp(217) Entering Element::GetClickLocation
T 2018-01-25 13:01:18:403 Element.cpp(90) Entering Element::IsDisplayed
T 2018-01-25 13:01:18:404 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:18:466 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:18:466 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:18:466 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:18:466 Script.cpp(88) Entering Script::AddArgument(bool)
T 2018-01-25 13:01:18:466 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:18:466 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:18:466 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:18:515 Element.cpp(362) Entering Element::GetLocationOnceScrolledIntoView
T 2018-01-25 13:01:18:516 Element.cpp(493) Entering Element::GetLocation
T 2018-01-25 13:01:18:516 Element.cpp(629) Entering Element::IsInline
D 2018-01-25 13:01:18:517 Element.cpp(539) Element is a block element, using IHTMLElement2::getBoundingClientRect
T 2018-01-25 13:01:18:521 Element.cpp(650) Entering Element::RectHasNonZeroDimensions
T 2018-01-25 13:01:18:522 Element.cpp(666) Entering Element::GetFrameDetails
T 2018-01-25 13:01:18:522 Element.cpp(956) Entering Element::GetContainingDocument
D 2018-01-25 13:01:18:528 Element.cpp(616) Element is not in a frame
T 2018-01-25 13:01:18:528 Element.cpp(905) Entering Element::CalculateClickPoint
T 2018-01-25 13:01:18:528 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:01:18:528 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:18:529 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:01:18:534 Element.cpp(931) Entering Element::IsLocationInViewPort
T 2018-01-25 13:01:18:534 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:01:18:534 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:18:535 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:01:18:540 Element.cpp(429) Entering Element::IsHiddenByOverflow
T 2018-01-25 13:01:18:540 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:18:541 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:18:541 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:18:541 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:18:541 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:18:541 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:18:564 Script.cpp(433) Entering Script::ConvertResultToString
D 2018-01-25 13:01:18:564 VariantUtilities.cpp(135) Result type is string
D 2018-01-25 13:01:18:565 Element.cpp(408) (x, y, w, h): 1479, 208, 450, 20
T 2018-01-25 13:01:18:565 Element.cpp(905) Entering Element::CalculateClickPoint
T 2018-01-25 13:01:18:565 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:01:18:565 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:18:567 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
D 2018-01-25 13:01:18:577 InputManager.cpp(627) Queueing SendInput structure for mouse move (origin: d9e0d561-c308-4504-89a1-d7012d5bd56e, x: 1704, y: 218)
T 2018-01-25 13:01:18:577 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(695) Entering InputManager::PointerDown
T 2018-01-25 13:01:18:577 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:18:577 InputManager.cpp(699) Queueing SendInput structure for mouse button down
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:01:18:577 InputManager.cpp(734) Entering InputManager::PointerUp
T 2018-01-25 13:01:18:577 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:18:577 InputManager.cpp(738) Queueing SendInput structure for mouse button up
T 2018-01-25 13:01:18:577 InputManager.cpp(886) Entering InputManager::AddMouseInput
D 2018-01-25 13:01:18:577 InputManager.cpp(185) Processing a total of 16 input events
T 2018-01-25 13:01:18:577 InputManager.cpp(279) Entering InputManager::PerformInputWithSendMessage
T 2018-01-25 13:01:18:577 HookProcessor.cpp(94) Entering HookProcessor::Initialize
T 2018-01-25 13:01:18:577 HookProcessor.cpp(104) Entering HookProcessor::Initialize
T 2018-01-25 13:01:18:577 HookProcessor.cpp(167) Entering HookProcessor::InstallWindowsHook
T 2018-01-25 13:01:18:577 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:18:753 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:01:18:753 HookProcessor.cpp(197) Entering HookProcessor::UninstallWindowsHook
T 2018-01-25 13:01:18:753 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:01:19:314 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:01:19:314 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:01:19:314 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:314 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:314 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:01:19:314 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:01:19:314 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:314 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:314 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:01:19:314 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:01:19:314 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:01:19:314 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:19:344 Browser.cpp(508) Waiting for document to complete...
T 2018-01-25 13:01:19:344 Browser.cpp(522) Entering Browser::IsDocumentNavigating
T 2018-01-25 13:01:19:356 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:19:360 Browser.cpp(522) Entering Browser::IsDocumentNavigating
D 2018-01-25 13:01:19:361 Browser.cpp(513) Not in navigating state
T 2018-01-25 13:01:19:372 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:01:19:372 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:01:19:372 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:01:19:372 server.cc(338) Response: {"value":null}

T 2018-01-25 13:01:19:372 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:01:19:372 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:01:19:372 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:01:19:381 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:01:19:381 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:01:19:381 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//input[count(. | //*[@id \u003d \u0027userID\u0027]) \u003d count(//*[@id \u003d \u0027userID\u0027])][count(. | //*[@name \u003d \u0027EmailAddress\u0027]) \u003d count(//*[@name \u003d \u0027EmailAddress\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"}
T 2018-01-25 13:01:19:381 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:01:19:381 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:01:19:381 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//input[count(. | //*[@id \u003d \u0027userID\u0027]) \u003d count(//*[@id \u003d \u0027userID\u0027])][count(. | //*[@name \u003d \u0027EmailAddress\u0027]) \u003d count(//*[@name \u003d \u0027EmailAddress\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"}
T 2018-01-25 13:01:19:381 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:01:19:381 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:01:19:381 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:01:19:381 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//input[count(. | //*[@id \u003d \u0027userID\u0027]) \u003d count(//*[@id \u003d \u0027userID\u0027])][count(. | //*[@name \u003d \u0027EmailAddress\u0027]) \u003d count(//*[@name \u003d \u0027EmailAddress\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"} }
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:381 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:01:19:381 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:01:19:381 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:19:381 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:01:19:381 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:381 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:01:19:381 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[count(. | //*[@id = 'userID']) = count(//*[@id = 'userID'])][count(. | //*[@name = 'EmailAddress']) = count(//*[@name = 'EmailAddress'])][count(. | //*[@type = 'text']) = count(//*[@type = 'text'])]
T 2018-01-25 13:01:19:381 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:19:381 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:19:392 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:19:394 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:19:394 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:01:19:394 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:394 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:01:19:394 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:394 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:19:394 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:19:415 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:01:19:415 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:01:19:416 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:01:19:417 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:01:19:417 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:01:19:417 VariantUtilities.cpp(342) Entering Script::GetArrayItem
I 2018-01-25 13:01:19:418 VariantUtilities.cpp(233) Unknown type of dispatch is found in result, assuming IHTMLElement
T 2018-01-25 13:01:19:418 IECommandExecutor.cpp(677) Entering IECommandExecutor::AddManagedElement
T 2018-01-25 13:01:19:418 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:418 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:419 ElementRepository.cpp(49) Entering ElementRepository::AddManagedElement
D 2018-01-25 13:01:19:419 ElementRepository.cpp(69) Element is not yet managed
T 2018-01-25 13:01:19:419 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:19:419 Element.cpp(45) Entering Element::Element
T 2018-01-25 13:01:19:419 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:01:19:419 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:01:19:419 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:01:19:419 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:419 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:419 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:01:19:424 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:01:19:424 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:01:19:424 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:01:19:424 server.cc(338) Response: {"value":[{"element-6066-11e4-a52e-4f735466cecf":"43c0737f-b460-4b28-8a51-66eee442f862"}]}

T 2018-01-25 13:01:19:424 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:01:19:424 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:01:19:424 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:01:19:427 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:01:19:427 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:01:19:427 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/43c0737f-b460-4b28-8a51-66eee442f862/clear HTTP verb: POST
body: {"id":"43c0737f-b460-4b28-8a51-66eee442f862"}
T 2018-01-25 13:01:19:427 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:01:19:427 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:01:19:427 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/43c0737f-b460-4b28-8a51-66eee442f862/clear {"id":"43c0737f-b460-4b28-8a51-66eee442f862"}
T 2018-01-25 13:01:19:427 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:01:19:427 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:01:19:427 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:01:19:427 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:01:19:427 command.cc(36) Raw JSON command: { "name" : "clear", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe", "id" : "43c0737f-b460-4b28-8a51-66eee442f862" }, "parameters" : {"id":"43c0737f-b460-4b28-8a51-66eee442f862"} }
T 2018-01-25 13:01:19:427 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:01:19:427 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:01:19:427 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:01:19:427 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:427 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:427 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:01:19:427 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:01:19:427 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:19:427 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:01:19:427 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:427 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:427 IECommandHandler.cpp(45) Entering IECommandHandler::GetElement
T 2018-01-25 13:01:19:427 IECommandExecutor.cpp(671) Entering IECommandExecutor::GetManagedElement
T 2018-01-25 13:01:19:427 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:01:19:431 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:431 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:431 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:19:431 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:19:437 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:19:442 Element.cpp(161) Entering Element::IsInteractable
T 2018-01-25 13:01:19:443 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:19:443 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:19:443 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:19:443 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:443 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:19:443 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:19:458 Element.cpp(188) Entering Element::IsEditable
T 2018-01-25 13:01:19:458 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:19:459 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:19:459 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:19:459 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:459 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:19:459 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:19:467 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:19:467 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:19:474 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:19:477 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:19:477 Script.cpp(94) Entering Script::AddArgument(ElementHandle)
T 2018-01-25 13:01:19:477 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:19:477 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:477 Script.cpp(264) Entering Script::ExecuteAsync
D 2018-01-25 13:01:19:477 Script.cpp(297) Creating synchronization event for new thread
D 2018-01-25 13:01:19:477 Script.cpp(317) Starting new thread
D 2018-01-25 13:01:19:477 Script.cpp(326) Waiting for new thread to be ready for messages
T 2018-01-25 13:01:19:477 AsyncScriptExecutor.cpp(170) Entering AsyncScriptExecutor::ThreadProc
T 2018-01-25 13:01:19:477 AsyncScriptExecutor.cpp(40) Entering AsyncScriptExecutor::OnCreate
D 2018-01-25 13:01:19:477 Script.cpp(346) Marshaling document to stream to send to new thread
T 2018-01-25 13:01:19:477 AsyncScriptExecutor.cpp(82) Entering AsyncScriptExecutor::OnSetDocument
T 2018-01-25 13:01:19:478 AsyncScriptExecutor.cpp(95) Entering AsyncScriptExecutor::OnSetArgument
T 2018-01-25 13:01:19:478 Script.cpp(396) Waiting for async script execution to be complete
T 2018-01-25 13:01:19:478 AsyncScriptExecutor.cpp(125) Entering AsyncScriptExecutor::OnExecuteScript
T 2018-01-25 13:01:19:478 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:19:478 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:478 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:19:478 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:19:499 Script.cpp(414) Async script execution completed, getting result
T 2018-01-25 13:01:19:499 AsyncScriptExecutor.cpp(160) Entering AsyncScriptExecutor::OnGetResult
T 2018-01-25 13:01:19:499 AsyncScriptExecutor.cpp(63) Entering AsyncScriptExecutor::OnClose
T 2018-01-25 13:01:19:499 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:01:19:499 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:01:19:499 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:499 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:499 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:01:19:499 AsyncScriptExecutor.cpp(72) Entering AsyncAtomExecutor::OnDestroy
T 2018-01-25 13:01:19:510 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:01:19:510 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:01:19:510 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:01:19:510 server.cc(338) Response: {"value":null}

T 2018-01-25 13:01:19:510 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:01:19:510 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:01:19:510 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:01:19:514 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:01:19:514 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:01:19:514 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//input[count(. | //*[@id \u003d \u0027userID\u0027]) \u003d count(//*[@id \u003d \u0027userID\u0027])][count(. | //*[@name \u003d \u0027EmailAddress\u0027]) \u003d count(//*[@name \u003d \u0027EmailAddress\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"}
T 2018-01-25 13:01:19:514 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:01:19:514 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:01:19:514 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//input[count(. | //*[@id \u003d \u0027userID\u0027]) \u003d count(//*[@id \u003d \u0027userID\u0027])][count(. | //*[@name \u003d \u0027EmailAddress\u0027]) \u003d count(//*[@name \u003d \u0027EmailAddress\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"}
T 2018-01-25 13:01:19:514 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:01:19:514 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:01:19:514 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:01:19:514 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//input[count(. | //*[@id \u003d \u0027userID\u0027]) \u003d count(//*[@id \u003d \u0027userID\u0027])][count(. | //*[@name \u003d \u0027EmailAddress\u0027]) \u003d count(//*[@name \u003d \u0027EmailAddress\u0027])][count(. | //*[@type \u003d \u0027text\u0027]) \u003d count(//*[@type \u003d \u0027text\u0027])]","using":"xpath"} }
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:01:19:514 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:01:19:514 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:01:19:514 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:19:514 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:01:19:514 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:514 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:01:19:514 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[count(. | //*[@id = 'userID']) = count(//*[@id = 'userID'])][count(. | //*[@name = 'EmailAddress']) = count(//*[@name = 'EmailAddress'])][count(. | //*[@type = 'text']) = count(//*[@type = 'text'])]
T 2018-01-25 13:01:19:514 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:19:514 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:19:520 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:19:522 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:19:522 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:01:19:522 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:522 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:01:19:522 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:522 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:19:522 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:19:537 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:01:19:538 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:01:19:538 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:01:19:539 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:01:19:539 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:01:19:539 VariantUtilities.cpp(342) Entering Script::GetArrayItem
I 2018-01-25 13:01:19:540 VariantUtilities.cpp(233) Unknown type of dispatch is found in result, assuming IHTMLElement
T 2018-01-25 13:01:19:540 IECommandExecutor.cpp(677) Entering IECommandExecutor::AddManagedElement
T 2018-01-25 13:01:19:540 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:540 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:540 ElementRepository.cpp(49) Entering ElementRepository::AddManagedElement
D 2018-01-25 13:01:19:540 ElementRepository.cpp(75) Element is already managed
T 2018-01-25 13:01:19:540 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:01:19:540 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:01:19:540 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:01:19:540 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:540 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:540 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:01:19:547 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:01:19:548 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:01:19:548 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:01:19:548 server.cc(338) Response: {"value":[{"element-6066-11e4-a52e-4f735466cecf":"43c0737f-b460-4b28-8a51-66eee442f862"}]}

T 2018-01-25 13:01:19:548 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:01:19:548 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:01:19:548 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:01:19:551 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:01:19:551 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:01:19:551 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/43c0737f-b460-4b28-8a51-66eee442f862/value HTTP verb: POST
body: {"id":"43c0737f-b460-4b28-8a51-66eee442f862","text":"arsalan","value":["a","r","s","a","l","a","n"]}
T 2018-01-25 13:01:19:551 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:01:19:551 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:01:19:551 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/43c0737f-b460-4b28-8a51-66eee442f862/value {"id":"43c0737f-b460-4b28-8a51-66eee442f862","text":"arsalan","value":["a","r","s","a","l","a","n"]}
T 2018-01-25 13:01:19:551 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:01:19:551 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:01:19:552 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:01:19:552 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:01:19:552 command.cc(36) Raw JSON command: { "name" : "sendKeys", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe", "id" : "43c0737f-b460-4b28-8a51-66eee442f862" }, "parameters" : {"id":"43c0737f-b460-4b28-8a51-66eee442f862","text":"arsalan","value":["a","r","s","a","l","a","n"]} }
T 2018-01-25 13:01:19:552 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:01:19:552 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:01:19:552 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:01:19:552 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:552 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:552 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:01:19:552 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:01:19:552 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:19:553 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:01:19:553 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:553 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:553 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:19:553 Browser.cpp(416) Entering Browser::GetTopLevelWindowHandle
T 2018-01-25 13:01:19:553 IECommandHandler.cpp(45) Entering IECommandHandler::GetElement
T 2018-01-25 13:01:19:553 IECommandExecutor.cpp(671) Entering IECommandExecutor::GetManagedElement
T 2018-01-25 13:01:19:554 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:01:19:556 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:19:556 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:19:556 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:19:556 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:19:561 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:19:562 Element.cpp(362) Entering Element::GetLocationOnceScrolledIntoView
T 2018-01-25 13:01:19:562 Element.cpp(493) Entering Element::GetLocation
T 2018-01-25 13:01:19:563 Element.cpp(629) Entering Element::IsInline
D 2018-01-25 13:01:19:563 Element.cpp(539) Element is a block element, using IHTMLElement2::getBoundingClientRect
T 2018-01-25 13:01:19:566 Element.cpp(650) Entering Element::RectHasNonZeroDimensions
T 2018-01-25 13:01:19:566 Element.cpp(666) Entering Element::GetFrameDetails
T 2018-01-25 13:01:19:566 Element.cpp(956) Entering Element::GetContainingDocument
D 2018-01-25 13:01:19:571 Element.cpp(616) Element is not in a frame
T 2018-01-25 13:01:19:571 Element.cpp(905) Entering Element::CalculateClickPoint
T 2018-01-25 13:01:19:571 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:01:19:571 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:19:571 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:01:19:574 Element.cpp(931) Entering Element::IsLocationInViewPort
T 2018-01-25 13:01:19:574 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:01:19:574 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:19:575 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:01:19:578 Element.cpp(429) Entering Element::IsHiddenByOverflow
T 2018-01-25 13:01:19:578 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:19:579 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:19:579 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:19:579 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:579 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:19:579 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:19:590 Script.cpp(433) Entering Script::ConvertResultToString
D 2018-01-25 13:01:19:590 VariantUtilities.cpp(135) Result type is string
D 2018-01-25 13:01:19:590 Element.cpp(408) (x, y, w, h): 1470, 204, 382, 28
T 2018-01-25 13:01:19:591 Element.cpp(90) Entering Element::IsDisplayed
T 2018-01-25 13:01:19:591 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:19:592 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:19:592 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:19:592 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:592 Script.cpp(88) Entering Script::AddArgument(bool)
T 2018-01-25 13:01:19:592 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:592 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:19:592 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:19:604 Element.cpp(134) Entering Element::IsEnabled
T 2018-01-25 13:01:19:604 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:19:605 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:19:605 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:19:605 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:19:605 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:19:605 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:19:615 InputManager.cpp(81) Entering InputManager::PerformInputSequence
W 2018-01-25 13:01:49:616 InputManager.cpp(99) Could not acquire mutex within the timeout. Multiple instances may have incorrect synchronization for interactions
T 2018-01-25 13:01:49:616 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:616 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:616 InputManager.cpp(906) Queueing SendInput structure for key down (key: a)
T 2018-01-25 13:01:49:616 InputManager.cpp(996) Adding key: a
T 2018-01-25 13:01:49:616 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:616 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:616 InputManager.cpp(906) Queueing SendInput structure for key up (key: a)
T 2018-01-25 13:01:49:617 InputManager.cpp(999) Removing key: a
T 2018-01-25 13:01:49:617 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:617 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:617 InputManager.cpp(906) Queueing SendInput structure for key down (key: r)
T 2018-01-25 13:01:49:617 InputManager.cpp(996) Adding key: r
T 2018-01-25 13:01:49:617 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:617 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:617 InputManager.cpp(906) Queueing SendInput structure for key up (key: r)
T 2018-01-25 13:01:49:617 InputManager.cpp(999) Removing key: r
T 2018-01-25 13:01:49:617 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:617 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:617 InputManager.cpp(906) Queueing SendInput structure for key down (key: s)
T 2018-01-25 13:01:49:617 InputManager.cpp(996) Adding key: s
T 2018-01-25 13:01:49:617 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:617 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:617 InputManager.cpp(906) Queueing SendInput structure for key up (key: s)
T 2018-01-25 13:01:49:617 InputManager.cpp(999) Removing key: s
T 2018-01-25 13:01:49:617 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:617 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:617 InputManager.cpp(906) Queueing SendInput structure for key down (key: a)
T 2018-01-25 13:01:49:617 InputManager.cpp(996) Adding key: a
T 2018-01-25 13:01:49:617 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:617 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:617 InputManager.cpp(906) Queueing SendInput structure for key up (key: a)
T 2018-01-25 13:01:49:617 InputManager.cpp(999) Removing key: a
T 2018-01-25 13:01:49:617 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:617 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:617 InputManager.cpp(906) Queueing SendInput structure for key down (key: l)
T 2018-01-25 13:01:49:617 InputManager.cpp(996) Adding key: l
T 2018-01-25 13:01:49:617 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:617 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:617 InputManager.cpp(906) Queueing SendInput structure for key up (key: l)
T 2018-01-25 13:01:49:618 InputManager.cpp(999) Removing key: l
T 2018-01-25 13:01:49:618 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:618 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:618 InputManager.cpp(906) Queueing SendInput structure for key down (key: a)
T 2018-01-25 13:01:49:618 InputManager.cpp(996) Adding key: a
T 2018-01-25 13:01:49:618 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:618 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:618 InputManager.cpp(906) Queueing SendInput structure for key up (key: a)
T 2018-01-25 13:01:49:618 InputManager.cpp(999) Removing key: a
T 2018-01-25 13:01:49:618 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:618 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:618 InputManager.cpp(906) Queueing SendInput structure for key down (key: n)
T 2018-01-25 13:01:49:618 InputManager.cpp(996) Adding key: n
T 2018-01-25 13:01:49:618 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:618 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:618 InputManager.cpp(906) Queueing SendInput structure for key up (key: n)
T 2018-01-25 13:01:49:618 InputManager.cpp(999) Removing key: n
T 2018-01-25 13:01:49:618 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:618 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:618 InputManager.cpp(906) Queueing SendInput structure for key down (key: Unidentified)
T 2018-01-25 13:01:49:618 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:618 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:01:49:618 InputManager.cpp(906) Queueing SendInput structure for key up (key: Unidentified)
D 2018-01-25 13:01:49:618 InputManager.cpp(185) Processing a total of 14 input events
T 2018-01-25 13:01:49:618 InputManager.cpp(279) Entering InputManager::PerformInputWithSendMessage
T 2018-01-25 13:01:49:618 HookProcessor.cpp(94) Entering HookProcessor::Initialize
T 2018-01-25 13:01:49:618 HookProcessor.cpp(104) Entering HookProcessor::Initialize
T 2018-01-25 13:01:49:618 HookProcessor.cpp(167) Entering HookProcessor::InstallWindowsHook
T 2018-01-25 13:01:49:619 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:691 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:01:49:691 HookProcessor.cpp(197) Entering HookProcessor::UninstallWindowsHook
T 2018-01-25 13:01:49:691 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:01:49:742 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:01:49:743 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:01:49:743 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:49:743 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:49:743 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:01:49:743 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:01:49:743 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:01:49:743 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:01:49:743 server.cc(338) Response: {"value":null}

T 2018-01-25 13:01:49:743 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:01:49:744 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:01:49:744 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:01:49:769 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:01:49:769 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:01:49:769 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//input[count(. | //*[@id \u003d \u0027password\u0027]) \u003d count(//*[@id \u003d \u0027password\u0027])][count(. | //*[@name \u003d \u0027Password\u0027]) \u003d count(//*[@name \u003d \u0027Password\u0027])][count(. | //*[@type \u003d \u0027password\u0027]) \u003d count(//*[@type \u003d \u0027password\u0027])]","using":"xpath"}
T 2018-01-25 13:01:49:769 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:01:49:769 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:01:49:769 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//input[count(. | //*[@id \u003d \u0027password\u0027]) \u003d count(//*[@id \u003d \u0027password\u0027])][count(. | //*[@name \u003d \u0027Password\u0027]) \u003d count(//*[@name \u003d \u0027Password\u0027])][count(. | //*[@type \u003d \u0027password\u0027]) \u003d count(//*[@type \u003d \u0027password\u0027])]","using":"xpath"}
T 2018-01-25 13:01:49:770 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:01:49:770 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:01:49:770 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:01:49:770 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:01:49:770 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//input[count(. | //*[@id \u003d \u0027password\u0027]) \u003d count(//*[@id \u003d \u0027password\u0027])][count(. | //*[@name \u003d \u0027Password\u0027]) \u003d count(//*[@name \u003d \u0027Password\u0027])][count(. | //*[@type \u003d \u0027password\u0027]) \u003d count(//*[@type \u003d \u0027password\u0027])]","using":"xpath"} }
T 2018-01-25 13:01:49:770 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:01:49:770 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:01:49:770 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:01:49:770 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:49:770 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:49:770 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:01:49:770 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:01:49:770 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:49:771 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:01:49:771 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:01:49:771 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:01:49:771 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:01:49:771 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:49:771 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:01:49:771 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[count(. | //*[@id = 'password']) = count(//*[@id = 'password'])][count(. | //*[@name = 'Password']) = count(//*[@name = 'Password'])][count(. | //*[@type = 'password']) = count(//*[@type = 'password'])]
T 2018-01-25 13:01:49:771 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:49:771 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:49:785 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:49:791 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:49:791 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:01:49:791 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:49:791 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:01:49:791 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:49:791 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:49:791 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:49:857 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:01:49:861 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:01:49:864 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:01:49:870 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:01:49:870 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:01:49:870 VariantUtilities.cpp(342) Entering Script::GetArrayItem
I 2018-01-25 13:01:49:872 VariantUtilities.cpp(233) Unknown type of dispatch is found in result, assuming IHTMLElement
T 2018-01-25 13:01:49:874 IECommandExecutor.cpp(677) Entering IECommandExecutor::AddManagedElement
T 2018-01-25 13:01:49:874 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:49:874 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:49:874 ElementRepository.cpp(49) Entering ElementRepository::AddManagedElement
D 2018-01-25 13:01:49:874 ElementRepository.cpp(69) Element is not yet managed
T 2018-01-25 13:01:49:874 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:49:874 Element.cpp(45) Entering Element::Element
T 2018-01-25 13:01:49:874 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:01:49:874 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:01:49:874 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:01:49:874 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:49:874 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:49:874 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:01:49:880 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:01:49:880 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:01:49:880 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:01:49:880 server.cc(338) Response: {"value":[{"element-6066-11e4-a52e-4f735466cecf":"b997555b-1af5-440e-83d1-103cbc60bc05"}]}

T 2018-01-25 13:01:49:880 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:01:49:880 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:01:49:880 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:01:49:886 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:01:49:886 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:01:49:886 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/b997555b-1af5-440e-83d1-103cbc60bc05/clear HTTP verb: POST
body: {"id":"b997555b-1af5-440e-83d1-103cbc60bc05"}
T 2018-01-25 13:01:49:886 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:01:49:886 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:01:49:886 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/b997555b-1af5-440e-83d1-103cbc60bc05/clear {"id":"b997555b-1af5-440e-83d1-103cbc60bc05"}
T 2018-01-25 13:01:49:887 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:01:49:887 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:01:49:887 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:01:49:887 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:01:49:887 command.cc(36) Raw JSON command: { "name" : "clear", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe", "id" : "b997555b-1af5-440e-83d1-103cbc60bc05" }, "parameters" : {"id":"b997555b-1af5-440e-83d1-103cbc60bc05"} }
T 2018-01-25 13:01:49:887 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:01:49:887 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:01:49:887 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:01:49:887 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:49:887 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:49:887 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:01:49:887 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:01:49:887 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:49:887 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:01:49:887 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:49:887 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:49:887 IECommandHandler.cpp(45) Entering IECommandHandler::GetElement
T 2018-01-25 13:01:49:887 IECommandExecutor.cpp(671) Entering IECommandExecutor::GetManagedElement
T 2018-01-25 13:01:49:887 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:01:49:897 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:49:897 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:49:897 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:49:897 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:49:905 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:49:910 Element.cpp(161) Entering Element::IsInteractable
T 2018-01-25 13:01:49:910 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:49:911 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:49:911 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:49:911 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:49:911 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:49:911 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:49:936 Element.cpp(188) Entering Element::IsEditable
T 2018-01-25 13:01:49:936 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:49:937 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:49:937 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:49:937 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:49:937 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:49:937 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:49:957 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:49:957 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:49:963 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:49:966 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:49:966 Script.cpp(94) Entering Script::AddArgument(ElementHandle)
T 2018-01-25 13:01:49:966 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:49:966 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:49:966 Script.cpp(264) Entering Script::ExecuteAsync
D 2018-01-25 13:01:49:966 Script.cpp(297) Creating synchronization event for new thread
D 2018-01-25 13:01:49:966 Script.cpp(317) Starting new thread
D 2018-01-25 13:01:49:966 Script.cpp(326) Waiting for new thread to be ready for messages
T 2018-01-25 13:01:49:967 AsyncScriptExecutor.cpp(170) Entering AsyncScriptExecutor::ThreadProc
T 2018-01-25 13:01:49:967 AsyncScriptExecutor.cpp(40) Entering AsyncScriptExecutor::OnCreate
D 2018-01-25 13:01:49:967 Script.cpp(346) Marshaling document to stream to send to new thread
T 2018-01-25 13:01:49:967 AsyncScriptExecutor.cpp(82) Entering AsyncScriptExecutor::OnSetDocument
T 2018-01-25 13:01:49:969 AsyncScriptExecutor.cpp(95) Entering AsyncScriptExecutor::OnSetArgument
T 2018-01-25 13:01:49:969 Script.cpp(396) Waiting for async script execution to be complete
T 2018-01-25 13:01:49:969 AsyncScriptExecutor.cpp(125) Entering AsyncScriptExecutor::OnExecuteScript
T 2018-01-25 13:01:49:969 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:49:969 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:49:969 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:49:969 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:50:012 Script.cpp(414) Async script execution completed, getting result
T 2018-01-25 13:01:50:012 AsyncScriptExecutor.cpp(160) Entering AsyncScriptExecutor::OnGetResult
T 2018-01-25 13:01:50:012 AsyncScriptExecutor.cpp(63) Entering AsyncScriptExecutor::OnClose
T 2018-01-25 13:01:50:012 AsyncScriptExecutor.cpp(72) Entering AsyncAtomExecutor::OnDestroy
T 2018-01-25 13:01:50:012 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:01:50:012 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:01:50:012 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:50:012 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:50:012 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:01:50:022 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:01:50:022 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:01:50:022 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:01:50:023 server.cc(338) Response: {"value":null}

T 2018-01-25 13:01:50:023 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:01:50:023 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:01:50:023 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:01:50:025 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:01:50:025 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:01:50:025 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//input[count(. | //*[@id \u003d \u0027password\u0027]) \u003d count(//*[@id \u003d \u0027password\u0027])][count(. | //*[@name \u003d \u0027Password\u0027]) \u003d count(//*[@name \u003d \u0027Password\u0027])][count(. | //*[@type \u003d \u0027password\u0027]) \u003d count(//*[@type \u003d \u0027password\u0027])]","using":"xpath"}
T 2018-01-25 13:01:50:025 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:01:50:025 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:01:50:025 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//input[count(. | //*[@id \u003d \u0027password\u0027]) \u003d count(//*[@id \u003d \u0027password\u0027])][count(. | //*[@name \u003d \u0027Password\u0027]) \u003d count(//*[@name \u003d \u0027Password\u0027])][count(. | //*[@type \u003d \u0027password\u0027]) \u003d count(//*[@type \u003d \u0027password\u0027])]","using":"xpath"}
T 2018-01-25 13:01:50:025 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:01:50:025 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:01:50:025 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:01:50:025 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:01:50:025 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//input[count(. | //*[@id \u003d \u0027password\u0027]) \u003d count(//*[@id \u003d \u0027password\u0027])][count(. | //*[@name \u003d \u0027Password\u0027]) \u003d count(//*[@name \u003d \u0027Password\u0027])][count(. | //*[@type \u003d \u0027password\u0027]) \u003d count(//*[@type \u003d \u0027password\u0027])]","using":"xpath"} }
T 2018-01-25 13:01:50:026 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:01:50:026 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:01:50:026 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:01:50:026 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:50:026 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:50:026 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:01:50:026 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:01:50:026 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:50:026 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:01:50:026 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:01:50:026 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:01:50:026 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:01:50:026 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:50:026 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:01:50:026 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[count(. | //*[@id = 'password']) = count(//*[@id = 'password'])][count(. | //*[@name = 'Password']) = count(//*[@name = 'Password'])][count(. | //*[@type = 'password']) = count(//*[@type = 'password'])]
T 2018-01-25 13:01:50:026 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:50:026 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:50:031 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:50:033 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:50:033 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:01:50:033 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:50:033 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:01:50:033 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:50:033 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:50:033 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:50:057 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:01:50:057 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:01:50:058 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:01:50:059 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:01:50:059 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:01:50:059 VariantUtilities.cpp(342) Entering Script::GetArrayItem
I 2018-01-25 13:01:50:060 VariantUtilities.cpp(233) Unknown type of dispatch is found in result, assuming IHTMLElement
T 2018-01-25 13:01:50:060 IECommandExecutor.cpp(677) Entering IECommandExecutor::AddManagedElement
T 2018-01-25 13:01:50:060 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:50:060 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:50:060 ElementRepository.cpp(49) Entering ElementRepository::AddManagedElement
D 2018-01-25 13:01:50:060 ElementRepository.cpp(75) Element is already managed
T 2018-01-25 13:01:50:060 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:01:50:060 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:01:50:060 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:01:50:060 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:50:060 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:50:060 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:01:50:068 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:01:50:068 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:01:50:069 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:01:50:069 server.cc(338) Response: {"value":[{"element-6066-11e4-a52e-4f735466cecf":"b997555b-1af5-440e-83d1-103cbc60bc05"}]}

T 2018-01-25 13:01:50:069 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:01:50:069 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:01:50:069 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:01:50:072 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:01:50:072 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:01:50:072 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/b997555b-1af5-440e-83d1-103cbc60bc05/value HTTP verb: POST
body: {"id":"b997555b-1af5-440e-83d1-103cbc60bc05","text":"inte8GREAT","value":["i","n","t","e","8","G","R","E","A","T"]}
T 2018-01-25 13:01:50:072 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:01:50:072 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:01:50:072 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/b997555b-1af5-440e-83d1-103cbc60bc05/value {"id":"b997555b-1af5-440e-83d1-103cbc60bc05","text":"inte8GREAT","value":["i","n","t","e","8","G","R","E","A","T"]}
T 2018-01-25 13:01:50:072 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:01:50:072 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:01:50:072 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:01:50:072 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:01:50:072 command.cc(36) Raw JSON command: { "name" : "sendKeys", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe", "id" : "b997555b-1af5-440e-83d1-103cbc60bc05" }, "parameters" : {"id":"b997555b-1af5-440e-83d1-103cbc60bc05","text":"inte8GREAT","value":["i","n","t","e","8","G","R","E","A","T"]} }
T 2018-01-25 13:01:50:072 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:01:50:072 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:01:50:072 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:50:072 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:01:50:072 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:50:072 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:01:50:072 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:01:50:072 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:01:50:073 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:01:50:073 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:50:073 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:50:073 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:01:50:073 Browser.cpp(416) Entering Browser::GetTopLevelWindowHandle
T 2018-01-25 13:01:50:073 IECommandHandler.cpp(45) Entering IECommandHandler::GetElement
T 2018-01-25 13:01:50:073 IECommandExecutor.cpp(671) Entering IECommandExecutor::GetManagedElement
T 2018-01-25 13:01:50:073 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:01:50:076 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:01:50:076 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:01:50:076 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:01:50:076 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:01:50:085 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:01:50:089 Element.cpp(362) Entering Element::GetLocationOnceScrolledIntoView
T 2018-01-25 13:01:50:089 Element.cpp(493) Entering Element::GetLocation
T 2018-01-25 13:01:50:090 Element.cpp(629) Entering Element::IsInline
D 2018-01-25 13:01:50:091 Element.cpp(539) Element is a block element, using IHTMLElement2::getBoundingClientRect
T 2018-01-25 13:01:50:097 Element.cpp(650) Entering Element::RectHasNonZeroDimensions
T 2018-01-25 13:01:50:100 Element.cpp(666) Entering Element::GetFrameDetails
T 2018-01-25 13:01:50:100 Element.cpp(956) Entering Element::GetContainingDocument
D 2018-01-25 13:01:50:113 Element.cpp(616) Element is not in a frame
T 2018-01-25 13:01:50:113 Element.cpp(905) Entering Element::CalculateClickPoint
T 2018-01-25 13:01:50:113 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:01:50:113 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:50:114 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:01:50:122 Element.cpp(931) Entering Element::IsLocationInViewPort
T 2018-01-25 13:01:50:122 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:01:50:122 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:50:125 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:01:50:133 Element.cpp(429) Entering Element::IsHiddenByOverflow
T 2018-01-25 13:01:50:134 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:50:136 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:50:136 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:50:136 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:50:136 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:50:136 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:50:166 Script.cpp(433) Entering Script::ConvertResultToString
D 2018-01-25 13:01:50:166 VariantUtilities.cpp(135) Result type is string
D 2018-01-25 13:01:50:166 Element.cpp(408) (x, y, w, h): 1470, 242, 382, 28
T 2018-01-25 13:01:50:170 Element.cpp(90) Entering Element::IsDisplayed
T 2018-01-25 13:01:50:171 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:50:173 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:50:173 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:50:173 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:50:173 Script.cpp(88) Entering Script::AddArgument(bool)
T 2018-01-25 13:01:50:173 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:50:173 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:50:173 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:50:210 Element.cpp(134) Entering Element::IsEnabled
T 2018-01-25 13:01:50:210 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:01:50:212 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:01:50:212 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:01:50:212 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:01:50:212 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:01:50:212 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:01:50:251 InputManager.cpp(81) Entering InputManager::PerformInputSequence
W 2018-01-25 13:02:20:251 InputManager.cpp(99) Could not acquire mutex within the timeout. Multiple instances may have incorrect synchronization for interactions
T 2018-01-25 13:02:20:251 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:252 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:252 InputManager.cpp(906) Queueing SendInput structure for key down (key: i)
T 2018-01-25 13:02:20:252 InputManager.cpp(996) Adding key: i
T 2018-01-25 13:02:20:252 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:252 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:252 InputManager.cpp(906) Queueing SendInput structure for key up (key: i)
T 2018-01-25 13:02:20:252 InputManager.cpp(999) Removing key: i
T 2018-01-25 13:02:20:252 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:252 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:252 InputManager.cpp(906) Queueing SendInput structure for key down (key: n)
T 2018-01-25 13:02:20:252 InputManager.cpp(996) Adding key: n
T 2018-01-25 13:02:20:252 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:252 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:252 InputManager.cpp(906) Queueing SendInput structure for key up (key: n)
T 2018-01-25 13:02:20:252 InputManager.cpp(999) Removing key: n
T 2018-01-25 13:02:20:252 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:252 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:252 InputManager.cpp(906) Queueing SendInput structure for key down (key: t)
T 2018-01-25 13:02:20:252 InputManager.cpp(996) Adding key: t
T 2018-01-25 13:02:20:252 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:252 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:252 InputManager.cpp(906) Queueing SendInput structure for key up (key: t)
T 2018-01-25 13:02:20:252 InputManager.cpp(999) Removing key: t
T 2018-01-25 13:02:20:252 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:252 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:252 InputManager.cpp(906) Queueing SendInput structure for key down (key: e)
T 2018-01-25 13:02:20:252 InputManager.cpp(996) Adding key: e
T 2018-01-25 13:02:20:252 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:252 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:253 InputManager.cpp(906) Queueing SendInput structure for key up (key: e)
T 2018-01-25 13:02:20:253 InputManager.cpp(999) Removing key: e
T 2018-01-25 13:02:20:253 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:253 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:253 InputManager.cpp(906) Queueing SendInput structure for key down (key: 8)
T 2018-01-25 13:02:20:253 InputManager.cpp(996) Adding key: 8
T 2018-01-25 13:02:20:253 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:253 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:253 InputManager.cpp(906) Queueing SendInput structure for key up (key: 8)
T 2018-01-25 13:02:20:253 InputManager.cpp(999) Removing key: 8
T 2018-01-25 13:02:20:253 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:253 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:253 InputManager.cpp(906) Queueing SendInput structure for key down (key: G)
T 2018-01-25 13:02:20:253 InputManager.cpp(996) Adding key: G
T 2018-01-25 13:02:20:253 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:253 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:253 InputManager.cpp(906) Queueing SendInput structure for key up (key: G)
T 2018-01-25 13:02:20:253 InputManager.cpp(999) Removing key: G
T 2018-01-25 13:02:20:253 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:253 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:253 InputManager.cpp(906) Queueing SendInput structure for key down (key: R)
T 2018-01-25 13:02:20:253 InputManager.cpp(996) Adding key: R
T 2018-01-25 13:02:20:253 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:253 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:253 InputManager.cpp(906) Queueing SendInput structure for key up (key: R)
T 2018-01-25 13:02:20:253 InputManager.cpp(999) Removing key: R
T 2018-01-25 13:02:20:253 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:254 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:254 InputManager.cpp(906) Queueing SendInput structure for key down (key: E)
T 2018-01-25 13:02:20:254 InputManager.cpp(996) Adding key: E
T 2018-01-25 13:02:20:254 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:254 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:254 InputManager.cpp(906) Queueing SendInput structure for key up (key: E)
T 2018-01-25 13:02:20:254 InputManager.cpp(999) Removing key: E
T 2018-01-25 13:02:20:254 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:254 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:254 InputManager.cpp(906) Queueing SendInput structure for key down (key: A)
T 2018-01-25 13:02:20:254 InputManager.cpp(996) Adding key: A
T 2018-01-25 13:02:20:254 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:254 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:254 InputManager.cpp(906) Queueing SendInput structure for key up (key: A)
T 2018-01-25 13:02:20:254 InputManager.cpp(999) Removing key: A
T 2018-01-25 13:02:20:255 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:255 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:255 InputManager.cpp(906) Queueing SendInput structure for key down (key: T)
T 2018-01-25 13:02:20:255 InputManager.cpp(996) Adding key: T
T 2018-01-25 13:02:20:255 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:256 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:256 InputManager.cpp(906) Queueing SendInput structure for key up (key: T)
T 2018-01-25 13:02:20:256 InputManager.cpp(999) Removing key: T
T 2018-01-25 13:02:20:256 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:256 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:256 InputManager.cpp(906) Queueing SendInput structure for key down (key: Unidentified)
T 2018-01-25 13:02:20:256 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:256 InputManager.cpp(899) Entering InputManager::AddKeyboardInput
D 2018-01-25 13:02:20:256 InputManager.cpp(906) Queueing SendInput structure for key up (key: Unidentified)
D 2018-01-25 13:02:20:256 InputManager.cpp(185) Processing a total of 30 input events
T 2018-01-25 13:02:20:256 InputManager.cpp(279) Entering InputManager::PerformInputWithSendMessage
T 2018-01-25 13:02:20:256 HookProcessor.cpp(94) Entering HookProcessor::Initialize
T 2018-01-25 13:02:20:256 HookProcessor.cpp(104) Entering HookProcessor::Initialize
T 2018-01-25 13:02:20:256 HookProcessor.cpp(167) Entering HookProcessor::InstallWindowsHook
T 2018-01-25 13:02:20:256 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:342 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:02:20:343 HookProcessor.cpp(197) Entering HookProcessor::UninstallWindowsHook
T 2018-01-25 13:02:20:343 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:02:20:393 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:02:20:393 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:02:20:394 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:20:394 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:20:394 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:02:20:394 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:02:20:394 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:02:20:394 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:02:20:394 server.cc(338) Response: {"value":null}

T 2018-01-25 13:02:20:394 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:02:20:394 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:02:20:394 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:02:20:419 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:02:20:420 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:02:20:420 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//input[count(. | //*[@type \u003d \u0027submit\u0027]) \u003d count(//*[@type \u003d \u0027submit\u0027])][count(. | //*[@id \u003d \u0027btnSignIn\u0027]) \u003d count(//*[@id \u003d \u0027btnSignIn\u0027])][count(. | //*[@name \u003d \u0027btnSignIn\u0027]) \u003d count(//*[@name \u003d \u0027btnSignIn\u0027])]","using":"xpath"}
T 2018-01-25 13:02:20:420 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:02:20:420 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:02:20:420 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//input[count(. | //*[@type \u003d \u0027submit\u0027]) \u003d count(//*[@type \u003d \u0027submit\u0027])][count(. | //*[@id \u003d \u0027btnSignIn\u0027]) \u003d count(//*[@id \u003d \u0027btnSignIn\u0027])][count(. | //*[@name \u003d \u0027btnSignIn\u0027]) \u003d count(//*[@name \u003d \u0027btnSignIn\u0027])]","using":"xpath"}
T 2018-01-25 13:02:20:420 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:02:20:420 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:02:20:420 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:02:20:420 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:02:20:420 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//input[count(. | //*[@type \u003d \u0027submit\u0027]) \u003d count(//*[@type \u003d \u0027submit\u0027])][count(. | //*[@id \u003d \u0027btnSignIn\u0027]) \u003d count(//*[@id \u003d \u0027btnSignIn\u0027])][count(. | //*[@name \u003d \u0027btnSignIn\u0027]) \u003d count(//*[@name \u003d \u0027btnSignIn\u0027])]","using":"xpath"} }
T 2018-01-25 13:02:20:420 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:02:20:420 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:02:20:420 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:02:20:420 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:20:420 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:20:420 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:02:20:421 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:20:421 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:20:421 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:02:20:421 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:02:20:421 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:02:20:421 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:02:20:421 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:20:421 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:02:20:421 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //input[count(. | //*[@type = 'submit']) = count(//*[@type = 'submit'])][count(. | //*[@id = 'btnSignIn']) = count(//*[@id = 'btnSignIn'])][count(. | //*[@name = 'btnSignIn']) = count(//*[@name = 'btnSignIn'])]
T 2018-01-25 13:02:20:421 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:02:20:421 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:02:20:440 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:02:20:447 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:02:20:447 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:02:20:447 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:02:20:447 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:02:20:447 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:02:20:447 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:02:20:447 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:02:20:492 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:02:20:493 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:02:20:495 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:02:20:497 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:02:20:497 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:02:20:497 VariantUtilities.cpp(342) Entering Script::GetArrayItem
I 2018-01-25 13:02:20:498 VariantUtilities.cpp(233) Unknown type of dispatch is found in result, assuming IHTMLElement
T 2018-01-25 13:02:20:499 IECommandExecutor.cpp(677) Entering IECommandExecutor::AddManagedElement
T 2018-01-25 13:02:20:499 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:20:499 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:20:499 ElementRepository.cpp(49) Entering ElementRepository::AddManagedElement
D 2018-01-25 13:02:20:499 ElementRepository.cpp(69) Element is not yet managed
T 2018-01-25 13:02:20:499 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:20:499 Element.cpp(45) Entering Element::Element
T 2018-01-25 13:02:20:499 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:02:20:499 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:02:20:500 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:02:20:500 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:20:500 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:20:500 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:02:20:503 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:02:20:503 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:02:20:503 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:02:20:503 server.cc(338) Response: {"value":[{"element-6066-11e4-a52e-4f735466cecf":"5668df30-2c81-41bf-86ce-4d5e16f34f00"}]}

T 2018-01-25 13:02:20:503 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:02:20:503 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:02:20:503 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:02:20:506 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:02:20:506 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:02:20:506 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/5668df30-2c81-41bf-86ce-4d5e16f34f00/click HTTP verb: POST
body: {"id":"5668df30-2c81-41bf-86ce-4d5e16f34f00"}
T 2018-01-25 13:02:20:506 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:02:20:506 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:02:20:506 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/element/5668df30-2c81-41bf-86ce-4d5e16f34f00/click {"id":"5668df30-2c81-41bf-86ce-4d5e16f34f00"}
T 2018-01-25 13:02:20:506 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:02:20:506 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:02:20:507 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:02:20:507 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:02:20:507 command.cc(36) Raw JSON command: { "name" : "click", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe", "id" : "5668df30-2c81-41bf-86ce-4d5e16f34f00" }, "parameters" : {"id":"5668df30-2c81-41bf-86ce-4d5e16f34f00"} }
T 2018-01-25 13:02:20:507 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:02:20:507 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:02:20:507 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:20:507 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:20:507 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:02:20:507 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:02:20:507 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:20:507 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:20:507 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:02:20:507 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:20:507 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:20:507 IECommandHandler.cpp(45) Entering IECommandHandler::GetElement
T 2018-01-25 13:02:20:507 IECommandExecutor.cpp(671) Entering IECommandExecutor::GetManagedElement
T 2018-01-25 13:02:20:507 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:02:20:513 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:20:513 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:20:513 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:02:20:513 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:02:20:522 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:02:20:526 Element.cpp(79) Entering Element::ConvertToJson
T 2018-01-25 13:02:20:526 InputManager.cpp(81) Entering InputManager::PerformInputSequence
W 2018-01-25 13:02:50:526 InputManager.cpp(99) Could not acquire mutex within the timeout. Multiple instances may have incorrect synchronization for interactions
T 2018-01-25 13:02:50:526 InputManager.cpp(533) Entering InputManager::PointerMoveTo
T 2018-01-25 13:02:50:526 ElementRepository.cpp(34) Entering ElementRepository::GetManagedElement
T 2018-01-25 13:02:50:526 Element.cpp(217) Entering Element::GetClickLocation
T 2018-01-25 13:02:50:527 Element.cpp(90) Entering Element::IsDisplayed
T 2018-01-25 13:02:50:527 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:02:50:531 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:02:50:531 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:02:50:531 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:02:50:531 Script.cpp(88) Entering Script::AddArgument(bool)
T 2018-01-25 13:02:50:531 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:02:50:531 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:02:50:531 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:02:50:595 Element.cpp(362) Entering Element::GetLocationOnceScrolledIntoView
T 2018-01-25 13:02:50:595 Element.cpp(493) Entering Element::GetLocation
T 2018-01-25 13:02:50:598 Element.cpp(629) Entering Element::IsInline
D 2018-01-25 13:02:50:599 Element.cpp(539) Element is a block element, using IHTMLElement2::getBoundingClientRect
T 2018-01-25 13:02:50:613 Element.cpp(650) Entering Element::RectHasNonZeroDimensions
T 2018-01-25 13:02:50:617 Element.cpp(666) Entering Element::GetFrameDetails
T 2018-01-25 13:02:50:617 Element.cpp(956) Entering Element::GetContainingDocument
D 2018-01-25 13:02:50:639 Element.cpp(616) Element is not in a frame
T 2018-01-25 13:02:50:640 Element.cpp(905) Entering Element::CalculateClickPoint
T 2018-01-25 13:02:50:640 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:02:50:640 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:02:50:642 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:02:50:659 Element.cpp(931) Entering Element::IsLocationInViewPort
T 2018-01-25 13:02:50:659 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:02:50:659 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:02:50:662 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
T 2018-01-25 13:02:50:679 Element.cpp(429) Entering Element::IsHiddenByOverflow
T 2018-01-25 13:02:50:679 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:02:50:682 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:02:50:682 Script.cpp(99) Entering Script::AddArgument(IHTMLElement*)
T 2018-01-25 13:02:50:682 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:02:50:682 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:02:50:683 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:02:50:743 Script.cpp(433) Entering Script::ConvertResultToString
D 2018-01-25 13:02:50:743 VariantUtilities.cpp(135) Result type is string
D 2018-01-25 13:02:50:743 Element.cpp(408) (x, y, w, h): 1470, 368, 92, 35
T 2018-01-25 13:02:50:743 Element.cpp(905) Entering Element::CalculateClickPoint
T 2018-01-25 13:02:50:743 Element.cpp(844) Entering Element::GetClickableViewPortLocation
T 2018-01-25 13:02:50:743 Element.cpp(956) Entering Element::GetContainingDocument
T 2018-01-25 13:02:50:747 DocumentHost.cpp(281) Entering DocumentHost::GetDocumentMode
D 2018-01-25 13:02:50:764 InputManager.cpp(627) Queueing SendInput structure for mouse move (origin: 5668df30-2c81-41bf-86ce-4d5e16f34f00, x: 1516, y: 385)
T 2018-01-25 13:02:50:764 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(695) Entering InputManager::PointerDown
T 2018-01-25 13:02:50:764 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:50:764 InputManager.cpp(699) Queueing SendInput structure for mouse button down
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
T 2018-01-25 13:02:50:764 InputManager.cpp(734) Entering InputManager::PointerUp
T 2018-01-25 13:02:50:764 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:50:764 InputManager.cpp(738) Queueing SendInput structure for mouse button up
T 2018-01-25 13:02:50:764 InputManager.cpp(886) Entering InputManager::AddMouseInput
D 2018-01-25 13:02:50:764 InputManager.cpp(185) Processing a total of 16 input events
T 2018-01-25 13:02:50:764 InputManager.cpp(279) Entering InputManager::PerformInputWithSendMessage
T 2018-01-25 13:02:50:764 HookProcessor.cpp(94) Entering HookProcessor::Initialize
T 2018-01-25 13:02:50:764 HookProcessor.cpp(104) Entering HookProcessor::Initialize
T 2018-01-25 13:02:50:764 HookProcessor.cpp(167) Entering HookProcessor::InstallWindowsHook
T 2018-01-25 13:02:50:765 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:50:967 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:02:50:967 HookProcessor.cpp(197) Entering HookProcessor::UninstallWindowsHook
T 2018-01-25 13:02:50:967 HookProcessor.cpp(244) Entering HookProcessor::Dispose
T 2018-01-25 13:02:51:529 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:02:51:529 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:02:51:529 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:51:529 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:51:529 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:02:51:529 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:51:529 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:51:529 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:51:529 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:51:529 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:51:529 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:51:529 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:02:51:584 Browser.cpp(50) Entering Browser::BeforeNavigate2
D 2018-01-25 13:02:51:597 Browser.cpp(508) Waiting for document to complete...
T 2018-01-25 13:02:51:597 Browser.cpp(522) Entering Browser::IsDocumentNavigating
D 2018-01-25 13:02:51:599 Browser.cpp(546) document.readyState is not 'complete'; it was loading
T 2018-01-25 13:02:51:599 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:51:800 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:51:800 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:51:800 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:51:800 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:51:800 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:51:800 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:51:800 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:51:801 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:51:802 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:52:002 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:52:002 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:52:002 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:52:002 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:52:002 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:52:002 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:52:002 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:52:003 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:52:003 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:52:204 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:52:204 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:52:204 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:52:204 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:52:204 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:52:204 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:52:204 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:52:206 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:52:206 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:52:407 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:52:407 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:52:407 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:52:408 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:52:408 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:52:408 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:52:408 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:52:409 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:52:409 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:52:610 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:52:610 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:52:610 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:52:610 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:52:610 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:52:610 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:52:610 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:52:611 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:52:612 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:52:813 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:52:813 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:52:813 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:52:813 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:52:813 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:52:813 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:52:813 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:52:814 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:52:815 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:53:015 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:53:015 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:53:015 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:53:015 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:53:015 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:53:015 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:53:016 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:53:017 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:53:017 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:53:218 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:53:218 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:53:218 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:53:218 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:53:218 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:53:218 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:53:218 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:53:219 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:53:220 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:53:420 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:53:420 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:53:420 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:53:420 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:53:420 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:53:420 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:53:420 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:53:421 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:53:422 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:53:623 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:53:623 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:53:623 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:53:623 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:53:623 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:53:623 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:53:623 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:53:624 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:53:624 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:53:826 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:53:826 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:53:826 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:53:826 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:53:826 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:53:826 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:53:826 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:53:827 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:53:827 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:54:029 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:54:029 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:54:029 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:54:029 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:54:029 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:54:029 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:54:029 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:54:029 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:54:030 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:54:230 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:54:230 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:54:230 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:54:230 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:54:230 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:54:230 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:54:230 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:54:231 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:54:232 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:54:433 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:54:433 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:54:433 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:54:433 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:54:433 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:54:433 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:54:433 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:54:434 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:54:435 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:54:635 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:54:635 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:54:635 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:54:635 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:54:636 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:54:636 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:54:636 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:54:637 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:54:637 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:54:838 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:54:838 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:54:838 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:54:838 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:54:838 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:54:838 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:54:838 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:54:839 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:54:840 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:55:040 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:55:040 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:55:040 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:55:040 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:55:040 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:55:040 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:55:040 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:55:041 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:55:041 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:55:242 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:55:242 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:55:242 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:55:242 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:55:242 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:55:242 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:55:242 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:55:244 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:55:244 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:55:445 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:55:445 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:55:445 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:55:445 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:55:445 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:55:445 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:55:445 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:55:446 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:55:447 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:55:647 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:55:647 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:55:647 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:55:647 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:55:647 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:55:647 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:55:647 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:55:649 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:55:649 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:55:850 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:55:850 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:55:850 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:55:850 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:55:850 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:55:850 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:55:850 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:55:851 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:55:852 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:56:052 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:56:052 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:56:052 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:56:052 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:56:052 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:56:052 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:56:052 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:56:053 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:56:054 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:56:255 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:56:255 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:56:255 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:56:255 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:56:255 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:56:255 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:56:255 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:56:256 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:56:257 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:56:457 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:56:457 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:56:457 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:56:457 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:56:457 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:56:457 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:56:457 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:56:459 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:56:459 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:56:660 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:56:660 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:56:660 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:56:660 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:56:660 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:56:660 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:56:660 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:56:661 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:56:662 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:56:862 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:56:862 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:56:862 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:56:863 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:56:863 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:56:863 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:56:863 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:56:863 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:56:864 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:57:065 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:57:065 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:57:065 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:57:065 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:57:065 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:57:065 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:57:065 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:57:066 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:57:067 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:57:268 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:57:268 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:57:268 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:57:268 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:57:268 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:57:268 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:57:268 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:57:269 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:57:269 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:57:470 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:57:470 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:57:470 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:57:470 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:57:470 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:57:470 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:57:470 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:57:471 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:57:472 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:57:673 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:57:673 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:57:673 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:57:673 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:57:673 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:57:673 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:57:673 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:57:674 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:57:675 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:57:875 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:57:875 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:57:875 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:57:875 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:57:875 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:57:875 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:57:876 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:57:877 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:57:877 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:58:077 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:58:078 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:58:078 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:58:078 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:58:078 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:58:078 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:58:078 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:58:079 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:58:079 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:58:280 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:58:280 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:58:280 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:58:280 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:58:280 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:58:280 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:58:280 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:58:281 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:58:282 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:58:483 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:58:483 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:58:483 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:58:483 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:58:483 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:58:483 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:58:483 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:58:484 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:58:485 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:58:686 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:58:686 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:58:686 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:58:686 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:58:686 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:58:686 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:58:686 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:58:687 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:58:687 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:58:888 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:58:888 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:58:889 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:58:889 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:58:889 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:58:889 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:58:889 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:58:890 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:58:890 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:59:091 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:59:091 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:59:091 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:59:091 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:59:091 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:59:091 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:59:091 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:59:092 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:59:093 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:59:293 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:59:293 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:59:293 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:59:293 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:59:293 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:59:293 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:59:293 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:59:295 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:59:295 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:59:496 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:59:496 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:59:496 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:59:496 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:59:496 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:59:496 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:59:496 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:59:497 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:59:498 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:59:698 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:59:698 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:59:698 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:59:698 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:59:698 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:59:698 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:59:698 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:59:699 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:59:700 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:02:59:901 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:02:59:901 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:02:59:901 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:02:59:901 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:02:59:901 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:02:59:901 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:02:59:901 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:02:59:902 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:02:59:903 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:00:103 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:00:103 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:00:104 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:00:104 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:00:104 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:00:104 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:00:104 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:00:105 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:00:105 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:00:306 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:00:306 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:00:306 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:00:306 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:00:306 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:00:306 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:00:306 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:00:307 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:00:308 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:00:509 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:00:509 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:00:509 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:00:509 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:00:509 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:00:509 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:00:509 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:00:510 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:00:510 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:00:711 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:00:711 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:00:711 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:00:711 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:00:711 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:00:711 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:00:711 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:00:713 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:00:713 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:00:913 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:00:913 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:00:913 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:00:913 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:00:913 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:00:913 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:00:913 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:00:914 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:00:915 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:01:115 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:01:115 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:01:115 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:01:115 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:01:115 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:01:115 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:01:115 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:01:361 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:01:361 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:01:420 Browser.cpp(50) Entering Browser::BeforeNavigate2
T 2018-01-25 13:03:01:433 Browser.cpp(96) Entering Browser::DocumentComplete
D 2018-01-25 13:03:01:436 ElementRepository.cpp(113) Refreshing managed element cache. Found 6 to remove from cache.
T 2018-01-25 13:03:01:436 ElementRepository.cpp(80) Entering ElementRepository::RemoveManagedElement
T 2018-01-25 13:03:01:436 ElementRepository.cpp(80) Entering ElementRepository::RemoveManagedElement
T 2018-01-25 13:03:01:436 ElementRepository.cpp(80) Entering ElementRepository::RemoveManagedElement
T 2018-01-25 13:03:01:436 ElementRepository.cpp(80) Entering ElementRepository::RemoveManagedElement
T 2018-01-25 13:03:01:436 ElementRepository.cpp(80) Entering ElementRepository::RemoveManagedElement
T 2018-01-25 13:03:01:436 ElementRepository.cpp(80) Entering ElementRepository::RemoveManagedElement
T 2018-01-25 13:03:01:562 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:01:562 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:01:562 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:01:563 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:01:563 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:01:563 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:01:563 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:01:564 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:01:564 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:01:765 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:01:765 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:01:765 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:01:765 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:01:765 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:01:765 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:01:765 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:01:766 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:01:767 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:01:967 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:01:968 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:01:968 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:01:968 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:01:968 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:01:968 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:01:968 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:01:969 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:01:969 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:02:170 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:02:171 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:02:171 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:02:171 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:02:171 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:02:171 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:02:171 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:02:172 Browser.cpp(464) Browser busy property is true.
T 2018-01-25 13:03:02:172 IECommandExecutor.cpp(377) Entering IECommandExecutor::WaitThreadProc
T 2018-01-25 13:03:02:353 Browser.cpp(96) Entering Browser::DocumentComplete
T 2018-01-25 13:03:02:373 IECommandExecutor.cpp(172) Entering IECommandExecutor::OnWait
T 2018-01-25 13:03:02:373 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:02:373 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:02:373 Browser.cpp(438) Entering Browser::Wait
D 2018-01-25 13:03:02:373 Browser.cpp(448) Navigate Events Completed.
T 2018-01-25 13:03:02:373 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:02:373 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:02:376 Browser.cpp(508) Waiting for document to complete...
T 2018-01-25 13:03:02:376 Browser.cpp(522) Entering Browser::IsDocumentNavigating
T 2018-01-25 13:03:02:383 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:02:385 Browser.cpp(522) Entering Browser::IsDocumentNavigating
D 2018-01-25 13:03:02:387 Browser.cpp(513) Not in navigating state
T 2018-01-25 13:03:02:394 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:02:394 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:02:394 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:02:394 server.cc(338) Response: {"value":null}

T 2018-01-25 13:03:02:394 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:02:394 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:02:394 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:02:401 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:02:401 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:02:402 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:02:402 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:02:402 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:02:402 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:02:402 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:02:402 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:02:402 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:02:402 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:02:402 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:02:402 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:02:402 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:02:402 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:02:402 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:02:402 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:02:402 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:02:402 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:02:402 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:02:407 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:02:410 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:02:410 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:02:410 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:02:410 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:02:410 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:02:410 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:02:410 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:02:445 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:02:446 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:02:447 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:02:448 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:02:448 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:02:699 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:02:699 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:02:699 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:02:699 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:02:699 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:02:699 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:02:699 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:02:699 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:02:700 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:02:700 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:02:700 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:02:700 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:03:206 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:03:206 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:03:206 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:03:206 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:03:206 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:03:206 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:03:206 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:03:206 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:03:207 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:03:207 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:03:207 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:03:207 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:03:207 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:03:208 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:03:208 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:03:208 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:03:208 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:03:208 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:03:208 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:03:208 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:03:208 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:03:208 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:03:208 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:03:208 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:03:208 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:03:208 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:03:208 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:03:208 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:03:226 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:03:237 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:03:237 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:03:237 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:03:237 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:03:237 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:03:237 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:03:237 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:03:292 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:03:294 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:03:296 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:03:299 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:03:299 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:03:551 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:03:551 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:03:551 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:03:551 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:03:551 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:03:551 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:03:551 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:03:551 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:03:552 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:03:552 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:03:552 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:03:552 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:04:058 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:04:058 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:04:058 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:04:058 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:04:058 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:04:058 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:04:058 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:04:058 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:04:058 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:04:058 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:04:058 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:04:059 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:04:059 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:04:059 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:04:059 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:04:059 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:04:059 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:04:059 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:04:059 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:04:059 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:04:059 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:04:059 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:04:059 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:04:059 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:04:059 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:04:059 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:04:059 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:04:059 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:04:066 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:04:071 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:04:071 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:04:071 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:04:071 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:04:071 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:04:071 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:04:071 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:04:099 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:04:100 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:04:102 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:04:104 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:04:104 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:04:356 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:04:356 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:04:356 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:04:356 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:04:356 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:04:356 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:04:356 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:04:356 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:04:357 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:04:357 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:04:357 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:04:357 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:04:863 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:04:863 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:04:863 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:04:863 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:04:863 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:04:863 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:04:863 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:04:863 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:04:864 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:04:864 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:04:864 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:04:864 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:04:864 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:04:864 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:04:864 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:04:864 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:04:864 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:04:864 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:04:864 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:04:865 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:04:865 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:04:865 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:04:865 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:04:865 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:04:865 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:04:865 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:04:865 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:04:865 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:04:886 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:04:897 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:04:897 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:04:897 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:04:897 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:04:897 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:04:897 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:04:897 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:04:981 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:04:982 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:04:984 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:04:988 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:04:988 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:05:239 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:05:239 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:05:239 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:05:239 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:05:239 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:05:240 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:05:240 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:05:240 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:05:240 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:05:240 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:05:240 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:05:240 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:05:746 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:05:746 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:05:746 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:05:746 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:05:746 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:05:746 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:05:746 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:05:746 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:05:746 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:05:746 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:05:746 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:05:747 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:05:747 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:05:747 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:05:747 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:05:747 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:05:747 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:05:747 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:05:747 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:05:748 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:05:748 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:05:748 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:05:748 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:05:748 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:05:748 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:05:748 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:05:748 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:05:748 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:05:767 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:05:777 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:05:777 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:05:777 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:05:777 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:05:777 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:05:777 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:05:777 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:05:838 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:05:841 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:05:844 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:05:848 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:05:849 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:06:101 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:06:101 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:06:101 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:06:101 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:06:101 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:06:101 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:06:101 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:06:102 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:06:102 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:06:102 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:06:102 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:06:102 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:06:608 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:06:608 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:06:608 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:06:608 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:06:608 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:06:608 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:06:608 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:06:608 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:06:608 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:06:608 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:06:608 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:06:608 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:06:609 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:06:609 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:06:609 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:06:609 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:06:609 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:06:609 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:06:609 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:06:609 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:06:609 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:06:609 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:06:609 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:06:609 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:06:609 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:06:609 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:06:609 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:06:609 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:06:626 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:06:638 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:06:638 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:06:638 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:06:638 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:06:638 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:06:638 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:06:638 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:06:699 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:06:702 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:06:706 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:06:712 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:06:712 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:06:965 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:06:965 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:06:965 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:06:965 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:06:965 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:06:965 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:06:965 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:06:965 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:06:966 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:06:966 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:06:966 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:06:966 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:07:472 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:07:472 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:07:472 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:07:472 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:07:472 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:07:472 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:07:473 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:07:473 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:07:473 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:07:473 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:07:473 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:07:473 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:07:473 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:07:473 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:07:473 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:07:473 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:07:473 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:07:473 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:07:473 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:07:474 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:07:474 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:07:474 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:07:474 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:07:474 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:07:474 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:07:474 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:07:474 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:07:474 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:07:492 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:07:502 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:07:503 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:07:503 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:07:503 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:07:503 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:07:503 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:07:503 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:07:532 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:07:533 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:07:534 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:07:536 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:07:537 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:07:788 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:07:788 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:07:788 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:07:789 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:07:789 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:07:789 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:07:789 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:07:789 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:07:789 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:07:789 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:07:789 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:07:789 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:08:295 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:08:295 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:08:295 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:08:295 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:08:295 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:08:295 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:08:295 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:08:295 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:08:296 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:08:296 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:08:296 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:08:296 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:08:296 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:08:296 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:08:296 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:08:296 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:08:296 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:08:296 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:08:296 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:08:297 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:08:297 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:08:297 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:08:297 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:08:297 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:08:297 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:08:297 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:08:297 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:08:297 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:08:314 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:08:325 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:08:325 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:08:325 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:08:325 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:08:325 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:08:325 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:08:325 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:08:392 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:08:395 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:08:398 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:08:405 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:08:405 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:08:657 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:08:657 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:08:657 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:08:657 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:08:657 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:08:657 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:08:658 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:08:658 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:08:658 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:08:658 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:08:658 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:08:658 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:09:165 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:09:165 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:09:166 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:09:166 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:09:166 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:09:166 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:09:166 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:09:166 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:09:166 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:09:166 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:09:166 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:09:167 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:09:167 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:09:167 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:09:167 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:09:167 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:09:167 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:09:167 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:09:167 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:09:167 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:09:167 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:09:167 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:09:167 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:09:167 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:09:168 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:09:168 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:09:168 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:09:168 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:09:187 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:09:195 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:09:195 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:09:195 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:09:195 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:09:195 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:09:195 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:09:195 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:09:234 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:09:236 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:09:238 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:09:241 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:09:241 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:09:492 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:09:492 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:09:492 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:09:492 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:09:492 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:09:492 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:09:492 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:09:493 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:09:493 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:09:493 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:09:493 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:09:493 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:09:999 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:09:999 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:10:000 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:10:000 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:10:000 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:10:000 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:10:000 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:10:000 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:10:000 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:10:000 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:10:000 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:10:000 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:10:000 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:10:000 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:10:000 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:10:001 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:10:001 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:10:001 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:10:001 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:10:001 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:10:001 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:10:001 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:10:001 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:10:001 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:10:001 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:10:001 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:10:001 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:10:001 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:10:019 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:10:030 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:10:030 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:10:030 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:10:030 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:10:030 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:10:030 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:10:030 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:10:094 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:10:097 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:10:100 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:10:106 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:10:106 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:10:358 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:10:358 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:10:358 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:10:358 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:10:358 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:10:359 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:10:359 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:10:359 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:10:359 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:10:359 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:10:359 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:10:359 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:10:866 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:10:866 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:10:866 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:10:866 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:10:866 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:10:866 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:10:866 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:10:866 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:10:867 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:10:867 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:10:867 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:10:867 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:10:867 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:10:867 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:10:867 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:10:867 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:10:867 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:10:867 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:10:867 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:10:868 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:10:868 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:10:868 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:10:868 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:10:868 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:10:868 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:10:868 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:10:868 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:10:868 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:10:885 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:10:896 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:10:896 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:10:896 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:10:897 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:10:897 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:10:897 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:10:897 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:10:962 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:10:964 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:10:966 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:10:968 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:10:969 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:11:220 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:11:220 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:11:220 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:11:220 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:11:220 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:11:220 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:11:220 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:11:221 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:11:221 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:11:221 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:11:221 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:11:221 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:11:727 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:11:727 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:11:727 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:11:727 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:11:727 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:11:727 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:11:727 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:11:727 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:11:727 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:11:727 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:11:727 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:11:727 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:11:727 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:11:727 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:11:727 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:11:728 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:11:728 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:11:728 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:11:728 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:11:728 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:11:728 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:11:728 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:11:728 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:11:728 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:11:728 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:11:728 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:11:728 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:11:728 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:11:742 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:11:755 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:11:755 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:11:755 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:11:755 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:11:755 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:11:755 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:11:755 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:11:822 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:11:825 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:11:829 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:11:832 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:11:832 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:12:083 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:12:083 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:12:083 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:12:083 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:12:083 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:12:083 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:12:083 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:12:084 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:12:084 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:12:084 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:12:084 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:12:084 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:12:591 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:12:591 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:12:591 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:12:591 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:12:591 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:12:591 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:12:591 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:12:591 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:12:591 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:12:591 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:12:591 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:12:592 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:12:592 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:12:592 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:12:592 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:12:592 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:12:592 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:12:592 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:12:592 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:12:592 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:12:593 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:12:593 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:12:593 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:12:593 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:12:593 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:12:593 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:12:593 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:12:593 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:12:611 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:12:623 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:12:623 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:12:623 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:12:623 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:12:623 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:12:623 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:12:623 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:12:686 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:12:689 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:12:693 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:12:698 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:12:698 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:12:950 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:12:950 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:12:950 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:12:950 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:12:950 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:12:950 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:12:950 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:12:951 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:12:951 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:12:951 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:12:951 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:12:951 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:13:456 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:13:456 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:13:456 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:13:456 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:13:456 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:13:456 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:13:456 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:13:456 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:13:457 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:13:457 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:13:457 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:13:457 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:13:457 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:13:457 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:13:457 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:13:457 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:13:457 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:13:457 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:13:457 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:13:458 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:13:458 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:13:458 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:13:458 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:13:458 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:13:458 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:13:458 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:13:458 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:13:458 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:13:477 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:13:489 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:13:489 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:13:489 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:13:489 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:13:489 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:13:489 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:13:489 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:13:551 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:13:555 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:13:558 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:13:565 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:13:565 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:13:817 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:13:817 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:13:817 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:13:818 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:13:818 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:13:818 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:13:818 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:13:818 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:13:818 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:13:818 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:13:818 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:13:818 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:14:325 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:14:325 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:14:325 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:14:325 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:14:325 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:14:325 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:14:325 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:14:325 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:14:326 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:14:326 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:14:326 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:14:326 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:14:326 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:14:326 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:14:326 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:14:327 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:14:327 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:14:327 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:14:327 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:14:327 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:14:327 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:14:327 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:14:327 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:14:327 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:14:327 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:14:328 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:14:328 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:14:328 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:14:346 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:14:357 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:14:358 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:14:358 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:14:358 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:14:358 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:14:358 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:14:358 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:14:423 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:14:426 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:14:429 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:14:436 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:14:437 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:14:689 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:14:689 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:14:689 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:14:689 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:14:689 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:14:689 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:14:690 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:14:690 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:14:690 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:14:690 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:14:690 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:14:690 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:15:196 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:15:196 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:15:196 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:15:196 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:15:196 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:15:196 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:15:196 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:15:196 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:15:196 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:15:196 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:15:196 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:15:197 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:15:197 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:15:197 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:15:197 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:15:197 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:15:197 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:15:197 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:15:197 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:15:198 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:15:198 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:15:198 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:15:198 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:15:198 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:15:198 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:15:198 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:15:198 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:15:198 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:15:215 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:15:226 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:15:227 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:15:227 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:15:227 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:15:227 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:15:227 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:15:227 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:15:288 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:15:290 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:15:294 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:15:300 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:15:300 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:15:553 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:15:553 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:15:553 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:15:553 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:15:553 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:15:553 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:15:553 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:15:554 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:15:554 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:15:554 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:15:554 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:15:554 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:16:060 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:16:060 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:16:060 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:16:061 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:16:061 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:16:061 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:16:061 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:16:061 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:16:061 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:16:061 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:16:061 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:16:061 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:16:061 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:16:061 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:16:061 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:16:061 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:16:062 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:16:062 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:16:062 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:16:062 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:16:062 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:16:062 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:16:062 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:16:062 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:16:062 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:16:062 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:16:062 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:16:062 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:16:080 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:16:091 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:16:091 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:16:091 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:16:091 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:16:091 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:16:091 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:16:091 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:16:149 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:16:153 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:16:156 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:16:162 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:16:162 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:16:415 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:16:415 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:16:415 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:16:415 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:16:415 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:16:415 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:16:415 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:16:416 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:16:416 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:16:416 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:16:416 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:16:416 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:16:923 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:16:923 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:16:923 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:16:923 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:16:923 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:16:923 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:16:923 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:16:923 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:16:923 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:16:923 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:16:923 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:16:924 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:16:924 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:16:924 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:16:924 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:16:924 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:16:924 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:16:925 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:16:925 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:16:925 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:16:925 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:16:925 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:16:925 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:16:925 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:16:925 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:16:925 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:16:925 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:16:925 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:16:955 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:16:982 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:16:982 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:16:982 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:16:982 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:16:982 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:16:982 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:16:982 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:17:031 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:17:033 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:17:036 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:17:040 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:17:040 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:17:291 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:17:291 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:17:292 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:17:292 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:17:292 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:17:292 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:17:292 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:17:293 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:17:293 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:17:293 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:17:293 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:17:293 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:17:799 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:17:799 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:17:799 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:17:799 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:17:799 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:17:799 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:17:799 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:17:799 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:17:799 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:17:799 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:17:799 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:17:800 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:17:800 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:17:800 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:17:800 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:17:800 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:17:800 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:17:800 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:17:800 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:17:800 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:17:800 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:17:800 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:17:800 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:17:800 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:17:801 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:17:801 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:17:801 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:17:801 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:17:818 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:17:828 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:17:828 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:17:828 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:17:828 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:17:828 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:17:828 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:17:828 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:17:872 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:17:873 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:17:875 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:17:878 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:17:878 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:18:130 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:18:130 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:18:130 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:18:130 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:18:130 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:18:130 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:18:130 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:18:130 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:18:131 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:18:131 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:18:131 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:18:131 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:18:636 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:18:637 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:18:637 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:18:637 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:18:637 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:18:637 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:18:637 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:18:637 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:18:637 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:18:637 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:18:637 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:18:637 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:18:637 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:18:637 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:18:638 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:18:638 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:18:638 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:18:638 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:18:638 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:18:638 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:18:638 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:18:638 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:18:638 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:18:638 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:18:638 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:18:638 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:18:638 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:18:638 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:18:656 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:18:666 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:18:666 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:18:666 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:18:666 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:18:666 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:18:666 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:18:666 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:18:727 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:18:730 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:18:733 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:18:740 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:18:740 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:18:992 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:18:992 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:18:992 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:18:992 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:18:992 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:18:992 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:18:992 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:18:993 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:18:993 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:18:993 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:18:993 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:18:993 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:19:499 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:19:500 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:19:500 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:19:500 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:19:500 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:19:500 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:19:500 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:19:500 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:19:500 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:19:500 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:19:500 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:19:500 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:19:500 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:19:500 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:19:501 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:19:501 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:19:501 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:19:501 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:19:501 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:19:501 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:19:501 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:19:501 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:19:501 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:19:501 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:19:501 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:19:501 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:19:501 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:19:502 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:19:519 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:19:530 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:19:530 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:19:530 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:19:530 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:19:530 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:19:530 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:19:530 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:19:587 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:19:589 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:19:590 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:19:593 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:19:593 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:19:844 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:19:845 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:19:845 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:19:845 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:19:845 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:19:845 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:19:845 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:19:845 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:19:845 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:19:845 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:19:845 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:19:845 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:20:352 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:20:352 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:20:352 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:20:352 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:20:352 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:20:352 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:20:352 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:20:352 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:20:353 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:20:353 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:20:353 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:20:353 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:20:353 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:20:353 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:20:353 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:20:353 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:20:353 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:20:353 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:20:353 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:20:354 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:20:354 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:20:354 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:20:354 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:20:354 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:20:354 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:20:354 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:20:354 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:20:354 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:20:371 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:20:383 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:20:383 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:20:383 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:20:383 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:20:383 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:20:383 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:20:383 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:20:475 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:20:478 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:20:482 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:20:488 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:20:488 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:20:740 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:20:740 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:20:740 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:20:740 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:20:741 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:20:741 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:20:741 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:20:741 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:20:741 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:20:741 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:20:741 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:20:741 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:21:247 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:21:247 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:21:247 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:21:247 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:21:247 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:21:247 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:21:247 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:21:247 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:21:247 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:21:247 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:21:247 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:21:248 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:21:248 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:21:248 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:21:248 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:21:248 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:21:248 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:21:248 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:21:248 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:21:248 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:21:248 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:21:249 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:21:249 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:21:249 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:21:249 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:21:249 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:21:249 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:21:249 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:21:267 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:21:277 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:21:277 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:21:277 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:21:277 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:21:277 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:21:277 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:21:277 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:21:338 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:21:341 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:21:344 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:21:350 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:21:350 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:21:603 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:21:603 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:21:603 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:21:603 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:21:603 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:21:604 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:21:604 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:21:604 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:21:604 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:21:604 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:21:604 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:21:604 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:22:109 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:22:109 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:22:109 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:22:109 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:22:109 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:22:109 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:22:109 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:22:109 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:22:110 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:22:110 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:22:110 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:22:110 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:22:110 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:22:110 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:22:110 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:22:110 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:22:110 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:22:110 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:22:110 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:22:111 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:22:111 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:22:111 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:22:111 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:22:111 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:22:111 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:22:111 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:22:111 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:22:111 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:22:129 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:22:140 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:22:140 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:22:140 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:22:140 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:22:140 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:22:140 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:22:141 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:22:200 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:22:204 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:22:207 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:22:213 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:22:213 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:22:465 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:22:465 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:22:465 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:22:465 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:22:465 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:22:466 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:22:466 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:22:466 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:22:466 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:22:466 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:22:466 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:22:466 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:22:971 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:22:971 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:22:971 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:22:971 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:22:972 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:22:972 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:22:972 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:22:972 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:22:972 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:22:972 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:22:972 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:22:972 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:22:972 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:22:972 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:22:972 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:22:972 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:22:972 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:22:973 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:22:973 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:22:973 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:22:973 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:22:973 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:22:973 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:22:973 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:22:973 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:22:973 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:22:973 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:22:973 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:22:990 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:23:001 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:23:001 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:23:001 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:23:001 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:23:001 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:23:001 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:23:001 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:23:067 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:23:071 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:23:074 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:23:079 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:23:079 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:23:330 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:23:331 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:23:331 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:23:331 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:23:331 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:23:331 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:23:331 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:23:331 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:23:331 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:23:331 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:23:331 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:23:331 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:23:837 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:23:837 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:23:837 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:23:837 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:23:837 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:23:837 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:23:837 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:23:837 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:23:837 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:23:837 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:23:837 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:23:838 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:23:838 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:23:838 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:23:838 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:23:838 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:23:838 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:23:838 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:23:838 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:23:839 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:23:839 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:23:839 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:23:839 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:23:839 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:23:839 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:23:839 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:23:839 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:23:839 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:23:857 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:23:863 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:23:863 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:23:863 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:23:863 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:23:863 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:23:863 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:23:863 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:23:899 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:23:900 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:23:901 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:23:902 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:23:902 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:24:153 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:24:153 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:24:153 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:24:153 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:24:153 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:24:153 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:24:153 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:24:153 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:24:154 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:24:154 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:24:154 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:24:154 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:24:659 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:24:659 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:24:659 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:24:659 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:24:659 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:24:659 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:24:659 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:24:659 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:24:659 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:24:660 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:24:660 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:24:660 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:24:660 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:24:660 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:24:660 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:24:660 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:24:660 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:24:660 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:24:660 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:24:661 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:24:661 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:24:661 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:24:661 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:24:661 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:24:661 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:24:661 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:24:661 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:24:661 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:24:678 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:24:690 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:24:690 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:24:690 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:24:690 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:24:690 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:24:690 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:24:690 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:24:753 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:24:756 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:24:759 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:24:765 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:24:765 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:25:017 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:25:017 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:25:017 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:25:017 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:25:017 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:25:017 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:25:017 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:25:018 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:25:018 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:25:018 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:25:018 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:25:018 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:25:524 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:25:524 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:25:524 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:25:524 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:25:524 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:25:524 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:25:524 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:25:524 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:25:524 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:25:524 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:25:524 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:25:525 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:25:525 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:25:525 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:25:525 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:25:525 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:25:525 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:25:525 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:25:525 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:25:525 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:25:526 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:25:526 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:25:526 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:25:526 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:25:526 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:25:526 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:25:526 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:25:526 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:25:544 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:25:556 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:25:556 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:25:556 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:25:556 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:25:556 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:25:556 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:25:556 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:25:616 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:25:619 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:25:623 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:25:629 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:25:629 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:25:881 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:25:881 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:25:881 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:25:881 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:25:881 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:25:881 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:25:882 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:25:882 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:25:882 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:25:882 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:25:882 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:25:882 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:26:388 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:26:388 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:26:388 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:26:388 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:26:388 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:26:388 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:26:388 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:26:388 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:26:388 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:26:388 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:26:388 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:26:389 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:26:389 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:26:389 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:26:389 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:26:389 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:26:389 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:26:389 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:26:389 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:26:389 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:26:389 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:26:389 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:26:389 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:26:389 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:26:390 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:26:390 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:26:390 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:26:390 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:26:407 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:26:418 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:26:418 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:26:418 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:26:418 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:26:419 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:26:419 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:26:419 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:26:484 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:26:487 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:26:491 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:26:497 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:26:498 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:26:750 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:26:750 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:26:750 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:26:750 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:26:750 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:26:750 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:26:750 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:26:750 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:26:750 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:26:750 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:26:750 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:26:750 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:27:253 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:27:253 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:27:253 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:27:253 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:27:253 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:27:253 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:27:253 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:27:253 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:27:253 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:27:253 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:27:253 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:27:253 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:27:253 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:27:254 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:27:254 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:27:254 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:27:254 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:27:254 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:27:254 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:27:254 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:27:254 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:27:254 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:27:254 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:27:254 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:27:254 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:27:254 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:27:254 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:27:254 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:27:263 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:27:268 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:27:268 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:27:268 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:27:268 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:27:268 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:27:268 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:27:268 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:27:312 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:27:313 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:27:313 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:27:315 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:27:315 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:27:565 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:27:565 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:27:565 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:27:565 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:27:565 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:27:566 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:27:566 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:27:566 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:27:566 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:27:566 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:27:566 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:27:566 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:28:071 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:28:071 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:28:071 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:28:071 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:28:071 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:28:071 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:28:071 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:28:071 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:28:071 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:28:071 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:28:071 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:28:071 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:28:071 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:28:071 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:28:071 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:28:071 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:28:071 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:28:071 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:28:072 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:28:072 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:28:072 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:28:072 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:28:072 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:28:072 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:28:072 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:28:072 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:28:072 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:28:072 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:28:080 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:28:085 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:28:085 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:28:085 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:28:085 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:28:085 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:28:085 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:28:085 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:28:103 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:28:104 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:28:104 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:28:105 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:28:106 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:28:357 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:28:357 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:28:357 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:28:357 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:28:357 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:28:357 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:28:357 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:28:357 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:28:357 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:28:358 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:28:358 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:28:358 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:28:863 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:28:863 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:28:864 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:28:864 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:28:864 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:28:864 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:28:864 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:28:864 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:28:864 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:28:864 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:28:864 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:28:864 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:28:864 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:28:864 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:28:864 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:28:864 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:28:865 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:28:865 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:28:865 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:28:865 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:28:865 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:28:865 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:28:865 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:28:865 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:28:865 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:28:865 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:28:865 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:28:865 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:28:884 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:28:895 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:28:895 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:28:895 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:28:895 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:28:895 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:28:895 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:28:895 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:28:957 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:28:960 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:28:963 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:28:969 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:28:970 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:29:223 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:29:223 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:29:223 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:29:223 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:29:223 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:29:223 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:29:223 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:29:223 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:29:223 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:29:223 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:29:223 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:29:224 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:29:728 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:29:728 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:29:728 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:29:728 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:29:728 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:29:728 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:29:728 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:29:728 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:29:728 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:29:728 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:29:728 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:29:728 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:29:728 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:29:728 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:29:728 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:29:728 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:29:728 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:29:728 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:29:728 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:29:729 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:29:729 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:29:729 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:29:729 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:29:729 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:29:729 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:29:729 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:29:729 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:29:729 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:29:737 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:29:739 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:29:739 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:29:739 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:29:739 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:29:739 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:29:739 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:29:739 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:29:755 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:29:756 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:29:757 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:29:758 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:29:758 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:30:009 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:30:009 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:30:009 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:30:009 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:30:009 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:30:009 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:30:009 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:30:009 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:30:009 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:30:009 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:30:009 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:30:010 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:30:514 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:30:514 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:30:514 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:30:514 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:30:514 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:30:514 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:30:514 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:30:514 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:30:514 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:30:514 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:30:514 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:30:515 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:30:515 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:30:515 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:30:515 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:30:515 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:30:515 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:30:515 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:30:515 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:30:515 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:30:516 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:30:516 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:30:516 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:30:516 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:30:516 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:30:516 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:30:516 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:30:516 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:30:528 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:30:535 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:30:535 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:30:535 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:30:535 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:30:535 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:30:535 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:30:535 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:30:577 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:30:578 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:30:579 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:30:580 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:30:580 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:30:831 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:30:831 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:30:831 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:30:831 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:30:831 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:30:831 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:30:831 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:30:831 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:30:831 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:30:831 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:30:831 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:30:831 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:31:336 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:31:336 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:31:336 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:31:336 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:31:336 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:31:336 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:31:336 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:31:336 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:31:336 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:31:336 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:31:336 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:31:336 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:31:336 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:31:336 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:31:336 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:31:337 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:31:337 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:31:337 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:31:337 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:31:337 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:31:337 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:31:337 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:31:337 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:31:337 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:31:337 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:31:337 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:31:337 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:31:337 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:31:347 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:31:354 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:31:354 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:31:354 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:31:354 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:31:354 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:31:354 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:31:355 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:31:377 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:31:379 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:31:380 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:31:381 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:31:381 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:31:633 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:31:633 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:31:633 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:31:633 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:31:633 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:31:633 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:31:633 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:31:633 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:31:634 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:31:634 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:31:634 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:31:634 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:32:140 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:32:140 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:32:140 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:32:140 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:32:140 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:32:140 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:32:140 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:32:140 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:32:140 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:32:140 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:32:140 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:32:141 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:32:141 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:32:141 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:32:141 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:32:141 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:32:141 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:32:141 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:32:142 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:32:142 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:32:142 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:32:142 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:32:142 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:32:142 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:32:142 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:32:142 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:32:142 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:32:142 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:32:162 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:32:172 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:32:172 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:32:172 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:32:172 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:32:172 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:32:172 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:32:172 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:32:202 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:32:204 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:32:206 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:32:209 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:32:209 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:32:460 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:32:460 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:32:460 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:32:460 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:32:460 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:32:460 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:32:461 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:32:461 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:32:461 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:32:461 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:32:461 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:32:461 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:32:966 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:32:966 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:32:966 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:32:966 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:32:966 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:32:966 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:32:966 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:32:966 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:32:966 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:32:966 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:32:966 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:32:966 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:32:966 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:32:966 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:32:966 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:32:966 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:32:966 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:32:966 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:32:966 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:32:967 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:32:967 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:32:967 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:32:967 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:32:967 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:32:967 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:32:967 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:32:967 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:32:967 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:32:980 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:32:988 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:32:988 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:32:988 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:32:988 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:32:988 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:32:988 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:32:988 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:33:027 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:33:029 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:33:031 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:33:035 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:33:035 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:33:287 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:33:287 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:33:287 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:33:287 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:33:287 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:33:287 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:33:287 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:33:288 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:33:288 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:33:288 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:33:288 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:33:288 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:33:793 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:33:794 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:33:794 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:33:794 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:33:794 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:33:794 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:33:794 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:33:794 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:33:794 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:33:794 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:33:794 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:33:794 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:33:794 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:33:794 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:33:794 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:33:794 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:33:795 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:33:795 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:33:795 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:33:795 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:33:795 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:33:795 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:33:795 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:33:795 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:33:795 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:33:795 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:33:795 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:33:795 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:33:816 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:33:827 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:33:827 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:33:827 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:33:827 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:33:827 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:33:827 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:33:827 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:33:900 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:33:901 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:33:902 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:33:904 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:33:904 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:34:155 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:34:155 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:34:155 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:34:155 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:34:155 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:34:155 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:34:156 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:34:156 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:34:156 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:34:156 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:34:156 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:34:156 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:34:660 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:34:660 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:34:660 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:34:660 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:34:660 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:34:660 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:34:660 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:34:660 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:34:661 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:34:661 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:34:661 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:34:661 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:34:661 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:34:661 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:34:661 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:34:661 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:34:661 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:34:661 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:34:661 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:34:662 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:34:662 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:34:662 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:34:662 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:34:662 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:34:662 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:34:662 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:34:662 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:34:662 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:34:679 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:34:691 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:34:691 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:34:691 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:34:691 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:34:691 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:34:691 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:34:691 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:34:732 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:34:734 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:34:737 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:34:740 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:34:740 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:34:991 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:34:991 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:34:991 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:34:992 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:34:992 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:34:992 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:34:992 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:34:992 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:34:992 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:34:992 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:34:992 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:34:992 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:35:498 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:35:498 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:35:498 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:35:498 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:35:498 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:35:498 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:35:498 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:35:498 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:35:498 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:35:498 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:35:498 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:35:499 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:35:499 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:35:499 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:35:499 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:35:499 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:35:499 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:35:499 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:35:499 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:35:499 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:35:499 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:35:499 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:35:499 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:35:499 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:35:499 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:35:500 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:35:500 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:35:500 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:35:517 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:35:529 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:35:529 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:35:529 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:35:529 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:35:529 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:35:529 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:35:529 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:35:591 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:35:594 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:35:597 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:35:603 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:35:603 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:35:856 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:35:856 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:35:856 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:35:856 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:35:856 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:35:856 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:35:856 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:35:857 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:35:857 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:35:857 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:35:857 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:35:857 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:36:362 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:36:362 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:36:362 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:36:362 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:36:362 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:36:363 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:36:363 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:36:363 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:36:363 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:36:363 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:36:363 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:36:363 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:36:363 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:36:363 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:36:363 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:36:363 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:36:363 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:36:363 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:36:363 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:36:364 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:36:364 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:36:364 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:36:364 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:36:364 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:36:364 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:36:364 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:36:364 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:36:364 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:36:381 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:36:393 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:36:393 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:36:393 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:36:393 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:36:393 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:36:393 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:36:393 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:36:459 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:36:461 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:36:463 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:36:466 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:36:466 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:36:718 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:36:718 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:36:718 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:36:718 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:36:718 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:36:719 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:36:719 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:36:719 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:36:719 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:36:719 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:36:719 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:36:719 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:37:226 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:37:226 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:37:226 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:37:226 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:37:226 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:37:226 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:37:226 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:37:226 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:37:226 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:37:226 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:37:226 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:37:226 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:37:227 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:37:227 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:37:227 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:37:227 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:37:227 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:37:227 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:37:227 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:37:227 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:37:227 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:37:227 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:37:227 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:37:227 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:37:227 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:37:227 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:37:227 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:37:227 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:37:244 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:37:259 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:37:259 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:37:259 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:37:259 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:37:259 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:37:259 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:37:259 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:37:324 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:37:325 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:37:326 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:37:329 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:37:329 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:37:580 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:37:580 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:37:580 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:37:580 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:37:580 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:37:580 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:37:581 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:37:581 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:37:581 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:37:581 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:37:581 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:37:581 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:38:086 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:38:086 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:38:086 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:38:086 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:38:086 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:38:086 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:38:086 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:38:086 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:38:086 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:38:086 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:38:086 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:38:086 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:38:086 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:38:086 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:38:086 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:38:086 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:38:086 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:38:086 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:38:086 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:38:087 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:38:087 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:38:087 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:38:087 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:38:087 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:38:087 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:38:087 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:38:087 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:38:087 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:38:101 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:38:112 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:38:112 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:38:112 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:38:112 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:38:112 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:38:112 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:38:112 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:38:157 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:38:159 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:38:162 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:38:165 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:38:165 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:38:417 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:38:417 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:38:417 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:38:417 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:38:417 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:38:418 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:38:418 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:38:418 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:38:418 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:38:418 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:38:418 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:38:418 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:38:924 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:38:924 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:38:924 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:38:924 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:38:924 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:38:924 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:38:924 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:38:924 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:38:924 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:38:924 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:38:924 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:38:925 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:38:925 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:38:925 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:38:925 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:38:925 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:38:925 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:38:925 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:38:925 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:38:925 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:38:925 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:38:925 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:38:926 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:38:926 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:38:926 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:38:926 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:38:926 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:38:926 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:38:943 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:38:956 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:38:956 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:38:956 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:38:956 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:38:956 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:38:956 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:38:956 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:39:017 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:39:020 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:39:024 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:39:030 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:39:030 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:39:283 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:39:283 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:39:283 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:39:283 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:39:283 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:39:283 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:39:283 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:39:283 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:39:284 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:39:284 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:39:284 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:39:284 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:39:789 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:39:789 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:39:789 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:39:789 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:39:789 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:39:789 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:39:789 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:39:789 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:39:789 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:39:789 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:39:789 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:39:790 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:39:790 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:39:790 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:39:790 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:39:790 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:39:790 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:39:790 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:39:790 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:39:791 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:39:791 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:39:791 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:39:791 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:39:791 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:39:791 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:39:791 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:39:791 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:39:791 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:39:810 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:39:822 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:39:822 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:39:822 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:39:822 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:39:822 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:39:822 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:39:822 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:39:886 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:39:888 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:39:890 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:39:894 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:39:894 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:40:146 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:40:146 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:40:146 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:40:146 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:40:146 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:40:146 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:40:146 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:40:146 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:40:147 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:40:147 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:40:147 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:40:147 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:40:652 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:40:652 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:40:652 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:40:652 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:40:652 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:40:652 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:40:652 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:40:652 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:40:652 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:40:652 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:40:652 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:40:653 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:40:653 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:40:653 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:40:653 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:40:653 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:40:653 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:40:653 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:40:653 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:40:654 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:40:654 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:40:654 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:40:654 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:40:654 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:40:654 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:40:654 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:40:654 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:40:654 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:40:672 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:40:683 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:40:683 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:40:683 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:40:683 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:40:683 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:40:683 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:40:683 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:40:755 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:40:756 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:40:758 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:40:761 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:40:761 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:41:013 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:41:013 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:41:013 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:41:013 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:41:013 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:41:013 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:41:013 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:41:014 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:41:014 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:41:014 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:41:014 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:41:014 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:41:519 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:41:519 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:41:519 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:41:519 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:41:519 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:41:520 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:41:520 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:41:520 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:41:520 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:41:520 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:41:520 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:41:520 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:41:520 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:41:520 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:41:520 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:41:520 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:41:520 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:41:520 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:41:520 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:41:521 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:41:521 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:41:521 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:41:521 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:41:521 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:41:521 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:41:521 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:41:521 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:41:521 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:41:540 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:41:550 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:41:550 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:41:550 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:41:551 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:41:551 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:41:551 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:41:551 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:41:612 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:41:615 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:41:618 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:41:622 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:41:622 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:41:874 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:41:874 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:41:874 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:41:874 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:41:874 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:41:874 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:41:874 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:41:874 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:41:874 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:41:875 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:41:875 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:41:875 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:42:380 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:42:380 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:42:380 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:42:380 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:42:380 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:42:380 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:42:380 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:42:380 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:42:380 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:42:380 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:42:380 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:42:381 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:42:381 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:42:381 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:42:381 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:42:381 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:42:381 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:42:381 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:42:381 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:42:381 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:42:382 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:42:382 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:42:382 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:42:382 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:42:382 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:42:382 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:42:382 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:42:382 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:42:399 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:42:410 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:42:411 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:42:411 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:42:411 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:42:411 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:42:411 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:42:411 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:42:468 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:42:470 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:42:472 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:42:475 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:42:475 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:42:727 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:42:727 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:42:727 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:42:727 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:42:727 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:42:727 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:42:728 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:42:728 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:42:728 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:42:728 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:42:728 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:42:728 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:43:233 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:43:233 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:43:233 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:43:234 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:43:234 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:43:234 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:43:234 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:43:234 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:43:234 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:43:234 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:43:234 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:43:234 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:43:234 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:43:234 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:43:234 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:43:234 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:43:234 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:43:234 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:43:235 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:43:235 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:43:235 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:43:235 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:43:235 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:43:235 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:43:235 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:43:235 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:43:235 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:43:235 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:43:257 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:43:269 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:43:269 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:43:269 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:43:269 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:43:270 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:43:270 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:43:270 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:43:323 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:43:324 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:43:325 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:43:327 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:43:327 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:43:578 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:43:578 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:43:578 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:43:578 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:43:578 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:43:578 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:43:578 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:43:579 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:43:579 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:43:579 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:43:579 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:43:579 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:44:083 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:44:083 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:44:083 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:44:083 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:44:083 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:44:083 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:44:083 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:44:083 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:44:083 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:44:083 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:44:084 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:44:084 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:44:084 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:44:084 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:44:084 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:44:084 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:44:084 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:44:084 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:44:084 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:44:085 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:44:085 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:44:085 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:44:085 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:44:085 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:44:085 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:44:085 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:44:085 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:44:085 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:44:103 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:44:113 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:44:113 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:44:113 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:44:113 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:44:113 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:44:113 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:44:113 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:44:190 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:44:192 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:44:194 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:44:196 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:44:197 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:44:448 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:44:448 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:44:448 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:44:448 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:44:448 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:44:448 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:44:449 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:44:449 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:44:449 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:44:449 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:44:449 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:44:449 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:44:954 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:44:954 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:44:955 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:44:955 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:44:955 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:44:955 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:44:955 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:44:955 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:44:955 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:44:955 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:44:955 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:44:955 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:44:955 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:44:955 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:44:955 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:44:955 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:44:956 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:44:956 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:44:956 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:44:956 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:44:956 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:44:956 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:44:956 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:44:956 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:44:956 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:44:956 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:44:956 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:44:956 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:44:974 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:44:985 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:44:985 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:44:985 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:44:985 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:44:985 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:44:985 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:44:985 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:45:035 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:45:038 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:45:040 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:45:043 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:45:044 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:45:296 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:45:296 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:45:296 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:45:296 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:45:296 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:45:296 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:45:296 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:45:296 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:45:296 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:45:297 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:45:297 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:45:297 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:45:802 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:45:802 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:45:802 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:45:802 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:45:802 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:45:802 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:45:802 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:45:802 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:45:803 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:45:803 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:45:803 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:45:803 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:45:803 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:45:803 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:45:803 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:45:803 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:45:803 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:45:803 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:45:803 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:45:804 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:45:804 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:45:804 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:45:804 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:45:804 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:45:804 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:45:804 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:45:804 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:45:804 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:45:821 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:45:832 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:45:832 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:45:832 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:45:832 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:45:832 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:45:832 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:45:832 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:45:891 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:45:893 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:45:895 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:45:900 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:45:900 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:46:151 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:46:151 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:46:151 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:46:152 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:46:152 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:46:152 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:46:152 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:46:152 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:46:152 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:46:152 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:46:152 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:46:152 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:46:657 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:46:658 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:46:658 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:46:658 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:46:658 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:46:658 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:46:658 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:46:658 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:46:658 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:46:658 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:46:658 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:46:658 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:46:658 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:46:658 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:46:658 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:46:659 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:46:659 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:46:659 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:46:659 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:46:659 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:46:659 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:46:659 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:46:659 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:46:659 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:46:659 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:46:659 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:46:659 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:46:659 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:46:677 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:46:688 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:46:688 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:46:688 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:46:688 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:46:688 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:46:688 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:46:688 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:46:751 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:46:753 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:46:754 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:46:757 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:46:757 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:47:008 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:47:008 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:47:008 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:47:008 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:47:008 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:47:008 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:47:008 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:47:009 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:47:009 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:47:009 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:47:009 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:47:009 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:47:513 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:47:513 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:47:513 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:47:513 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:47:513 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:47:513 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:47:513 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:47:513 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:47:513 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:47:513 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:47:513 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:47:513 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:47:513 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:47:513 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:47:513 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:47:513 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:47:513 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:47:513 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:47:513 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:47:519 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:47:521 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:47:521 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:47:521 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:47:521 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:47:521 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:47:522 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:47:522 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:47:545 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:47:546 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:47:547 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:47:548 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:47:548 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:47:799 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:47:799 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:47:799 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:47:799 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:47:799 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:47:799 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:47:799 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:47:799 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:47:799 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:47:799 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:47:799 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:47:799 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:48:304 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:48:304 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:48:304 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:48:304 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:48:304 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:48:304 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:48:304 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:48:304 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:48:304 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:48:304 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:48:304 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:48:304 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:48:305 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:48:305 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:48:305 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:48:305 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:48:305 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:48:305 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:48:305 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:48:305 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:48:305 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:48:305 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:48:305 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:48:305 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:48:305 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:48:306 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:48:306 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:48:306 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:48:323 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:48:334 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:48:334 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:48:334 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:48:334 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:48:334 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:48:334 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:48:334 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:48:396 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:48:399 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:48:402 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:48:409 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:48:409 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:48:661 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:48:661 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:48:661 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:48:661 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:48:661 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:48:661 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:48:661 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:48:662 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:48:662 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:48:662 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:48:662 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:48:662 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:49:167 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:49:167 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:49:167 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:49:167 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:49:167 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:49:167 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:49:167 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:49:167 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:49:167 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:49:167 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:49:168 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:49:168 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:49:168 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:49:168 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:49:168 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:49:168 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:49:168 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:49:168 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:49:168 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:49:169 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:49:169 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:49:169 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:49:169 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:49:169 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:49:169 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:49:169 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:49:169 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:49:169 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:49:189 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:49:200 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:49:200 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:49:200 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:49:200 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:49:200 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:49:200 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:49:200 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:49:264 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:49:267 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:49:270 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:49:275 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:49:275 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:49:527 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:49:527 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:49:527 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:49:527 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:49:527 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:49:527 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:49:527 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:49:528 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:49:528 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:49:528 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:49:528 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:49:528 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:50:032 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:50:032 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:50:032 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:50:032 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:50:032 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:50:032 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:50:033 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:50:033 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:50:033 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:50:033 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:50:033 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:50:033 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:50:033 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:50:033 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:50:033 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:50:033 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:50:033 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:50:033 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:50:033 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:50:045 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:50:050 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:50:050 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:50:050 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:50:050 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:50:050 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:50:050 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:50:050 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:50:088 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:50:089 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:50:091 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:50:094 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:50:094 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:50:346 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:50:346 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:50:346 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:50:346 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:50:346 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:50:346 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:50:346 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:50:346 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:50:346 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:50:347 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:50:347 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:50:347 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:50:852 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:50:852 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:50:852 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:50:852 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:50:852 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:50:852 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:50:852 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:50:852 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:50:852 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:50:852 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:50:852 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:50:853 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:50:853 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:50:853 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:50:853 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:50:853 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:50:853 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:50:853 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:50:853 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:50:853 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:50:854 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:50:854 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:50:854 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:50:854 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:50:854 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:50:854 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:50:854 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:50:854 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:50:874 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:50:884 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:50:884 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:50:884 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:50:884 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:50:884 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:50:884 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:50:884 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:50:955 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:50:957 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:50:959 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:50:961 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:50:962 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:51:213 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:51:213 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:51:213 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:51:213 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:51:213 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:51:213 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:51:214 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:51:214 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:51:214 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:51:214 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:51:214 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:51:214 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:51:719 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:51:719 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:51:719 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:51:719 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:51:719 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:51:719 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:51:719 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:51:719 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:51:720 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:51:720 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:51:720 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:51:720 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:51:720 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:51:720 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:51:720 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:51:720 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:51:720 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:51:720 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:51:720 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:51:721 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:51:721 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:51:721 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:51:721 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:51:721 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:51:721 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:51:721 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:51:721 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:51:721 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:51:738 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:51:749 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:51:749 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:51:749 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:51:749 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:51:749 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:51:749 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:51:749 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:51:806 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:51:807 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:51:809 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:51:812 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:51:812 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:52:063 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:52:063 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:52:063 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:52:063 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:52:063 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:52:063 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:52:063 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:52:063 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:52:064 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:52:064 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:52:064 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:52:064 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:52:569 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:52:569 server.cc(238) Entering Server::ReadRequestBody
T 2018-01-25 13:03:52:569 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements HTTP verb: POST
body: {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:52:570 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:52:570 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:52:570 server.cc(281) Command: POST /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/elements {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"}
T 2018-01-25 13:03:52:570 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:52:570 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:52:570 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:52:570 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:52:570 command.cc(36) Raw JSON command: { "name" : "findElements", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {"value":"//a[count(. | //*[@href \u003d \u0027javascript:openBrowseDialog();\u0027]) \u003d count(//*[@href \u003d \u0027javascript:openBrowseDialog();\u0027])][count(. | //*[@title \u003d \u0027Browse teams and projects\u0027]) \u003d count(//*[@title \u003d \u0027Browse teams and projects\u0027])][count(. | //*[text() \u003d \u0027Browse\u0027]) \u003d count(//*[text() \u003d \u0027Browse\u0027])]","using":"xpath"} }
T 2018-01-25 13:03:52:570 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:52:570 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:52:570 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:52:570 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:52:570 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:52:570 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:52:570 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:52:571 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:52:571 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:52:571 IECommandExecutor.cpp(734) Entering IECommandExecutor::LocateElements
T 2018-01-25 13:03:52:571 IECommandExecutor.cpp(695) Entering IECommandExecutor::GetElementFindMethod
T 2018-01-25 13:03:52:571 ElementFinder.cpp(111) Entering ElementFinder::FindElements
T 2018-01-25 13:03:52:571 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:52:571 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
D 2018-01-25 13:03:52:572 ElementFinder.cpp(128) Using FindElements atom to locate element having xpath = //a[count(. | //*[@href = 'javascript:openBrowseDialog();']) = count(//*[@href = 'javascript:openBrowseDialog();'])][count(. | //*[@title = 'Browse teams and projects']) = count(//*[@title = 'Browse teams and projects'])][count(. | //*[text() = 'Browse']) = count(//*[text() = 'Browse'])]
T 2018-01-25 13:03:52:572 Browser.cpp(126) Entering Browser::GetDocument
I 2018-01-25 13:03:52:572 Browser.cpp(130) No child frame focus. Focus is on top-level frame
T 2018-01-25 13:03:52:594 Browser.cpp(613) Entering Browser::GetDocumentFromWindow
T 2018-01-25 13:03:52:604 Script.cpp(49) Entering Script::Initialize
T 2018-01-25 13:03:52:604 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:52:604 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:52:604 Script.cpp(70) Entering Script::AddArgument(std::wstring)
T 2018-01-25 13:03:52:605 Script.cpp(105) Entering Script::AddArgument(VARIANT)
T 2018-01-25 13:03:52:605 Script.cpp(169) Entering Script::Execute
T 2018-01-25 13:03:52:605 Script.cpp(438) Entering Script::CreateAnonymousFunction
T 2018-01-25 13:03:52:638 Script.cpp(426) Entering Script::ConvertResultToJsonValue
D 2018-01-25 13:03:52:639 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:52:640 VariantUtilities.cpp(307) Entering Script::GetPropertyNameList
D 2018-01-25 13:03:52:642 VariantUtilities.cpp(100) Result type is JScriptTypeInfo
T 2018-01-25 13:03:52:642 VariantUtilities.cpp(324) Entering Script::GetArrayLength
T 2018-01-25 13:03:52:893 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:52:893 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:52:893 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:52:893 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:52:893 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:52:893 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:52:893 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:52:893 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:52:893 server.cc(338) Response: {"value":[]}

T 2018-01-25 13:03:52:894 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:52:894 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:52:894 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:03:53:407 server.cc(174) Entering Server::ProcessRequest
T 2018-01-25 13:03:53:407 server.cc(183) Process request with: URI: /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/screenshot HTTP verb: GET
body: {}
T 2018-01-25 13:03:53:407 server.cc(272) Entering Server::DispatchCommand
T 2018-01-25 13:03:53:407 server.cc(583) Entering Server::LookupCommand
D 2018-01-25 13:03:53:407 server.cc(281) Command: GET /session/080bf16d-3441-4fbe-b8b8-d561e0d430fe/screenshot {}
T 2018-01-25 13:03:53:407 server.cc(378) Entering Server::LookupSession
T 2018-01-25 13:03:53:407 IESession.cpp(191) Entering IESession::ExecuteCommand
T 2018-01-25 13:03:53:408 IECommandExecutor.cpp(122) Entering IECommandExecutor::OnSetCommand
T 2018-01-25 13:03:53:408 command.cc(31) Entering Command::Deserialize
D 2018-01-25 13:03:53:408 command.cc(36) Raw JSON command: { "name" : "takeScreenshot", "locator" : { "sessionid" : "080bf16d-3441-4fbe-b8b8-d561e0d430fe" }, "parameters" : {} }
T 2018-01-25 13:03:53:408 IECommandExecutor.cpp(133) Entering IECommandExecutor::OnExecCommand
T 2018-01-25 13:03:53:408 IECommandExecutor.cpp(454) Entering IECommandExecutor::DispatchCommand
T 2018-01-25 13:03:53:408 IESession.cpp(212) Beginning wait for response length to be not zero
T 2018-01-25 13:03:53:408 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:53:408 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:53:408 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:03:53:408 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:03:53:408 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:03:53:409 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:03:53:409 CommandHandlers\ScreenshotCommandHandler.cpp(38) Entering ScreenshotCommandHandler::ExecuteInternal
T 2018-01-25 13:03:53:409 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:53:409 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:53:409 CommandHandlers\ScreenshotCommandHandler.cpp(94) Entering ScreenshotCommandHandler::CaptureViewport
T 2018-01-25 13:03:53:409 Browser.cpp(206) Entering Browser::GetContentWindowHandle
T 2018-01-25 13:03:53:486 CommandHandlers\ScreenshotCommandHandler.cpp(143) Entering ScreenshotCommandHandler::GetBase64Data
D 2018-01-25 13:03:53:550 CommandHandlers\ScreenshotCommandHandler.cpp(181) Size of screenshot image stream is 740730
T 2018-01-25 13:03:53:554 response.cc(72) Entering Response::SetSuccessResponse
T 2018-01-25 13:03:53:554 response.cc(78) Entering Response::SetResponse
T 2018-01-25 13:03:53:555 IECommandExecutor.cpp(577) Entering IECommandExecutor::GetCurrentBrowser
T 2018-01-25 13:03:53:555 IECommandExecutor.cpp(583) Entering IECommandExecutor::GetManagedBrowser
T 2018-01-25 13:03:53:555 response.cc(51) Entering Response::Serialize
T 2018-01-25 13:03:53:560 IESession.cpp(221) Found non-zero response length
T 2018-01-25 13:03:53:561 IECommandExecutor.cpp(156) Entering IECommandExecutor::OnGetResponse
T 2018-01-25 13:03:53:562 IECommandExecutor.cpp(285) Entering IECommandExecutor::OnIsSessionValid
D 2018-01-25 13:03:53:562 server.cc(338) Response: {"value":""}

T 2018-01-25 13:03:53:564 server.cc(391) Entering Server::SendResponseToClient
T 2018-01-25 13:03:53:564 response.cc(30) Entering Response::Deserialize
T 2018-01-25 13:03:53:574 server.cc(445) Entering Server::SendHttpOk
T 2018-01-25 13:23:01:422 Browser.cpp(50) Entering Browser::BeforeNavigate2
T 2018-01-25 13:23:01:972 Browser.cpp(50) Entering Browser::BeforeNavigate2
T 2018-01-25 13:23:01:998 Browser.cpp(96) Entering Browser::DocumentComplete
D 2018-01-25 13:23:01:998 ElementRepository.cpp(113) Refreshing managed element cache. Found 0 to remove from cache.
T 2018-01-25 13:23:03:154 Browser.cpp(96) Entering Browser::DocumentComplete
T 2018-01-25 13:43:01:947 Browser.cpp(50) Entering Browser::BeforeNavigate2
T 2018-01-25 13:43:02:502 Browser.cpp(50) Entering Browser::BeforeNavigate2
T 2018-01-25 13:43:02:527 Browser.cpp(96) Entering Browser::DocumentComplete
D 2018-01-25 13:43:02:527 ElementRepository.cpp(113) Refreshing managed element cache. Found 0 to remove from cache.
T 2018-01-25 13:43:04:250 Browser.cpp(96) Entering Browser::DocumentComplete
T 2018-01-25 13:54:49:091 Browser.cpp(54) Entering Browser::OnQuit
T 2018-01-25 13:54:49:091 DocumentHost.cpp(252) Entering DocumentHost::PostQuitMessage
T 2018-01-25 13:54:49:092 IECommandExecutor.cpp(250) Entering IECommandExecutor::OnBrowserQuit
T 2018-01-25 13:54:49:092 IECommandExecutor.cpp(529) Entering IECommandExecutor::IsAlertActive
T 2018-01-25 13:54:49:092 Browser.cpp(700) Entering Browser::GetActiveDialogWindowHandle
T 2018-01-25 13:54:49:092 Browser.cpp(206) Entering Browser::GetContentWindowHandle
D 2018-01-25 13:54:49:092 IECommandExecutor.cpp(543) No alert handle is found
T 2018-01-25 13:54:49:092 Browser.cpp(300) Entering Browser::DetachEvents
